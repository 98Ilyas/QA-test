{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9830,"endOffset":9903,"count":6}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9909,"endOffset":9960,"count":86}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9966,"endOffset":10013,"count":5}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11625,"endOffset":11694,"count":1}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12376,"endOffset":12404,"count":60}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12718,"endOffset":12746,"count":60}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":13184,"endOffset":13240,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13400,"endOffset":13438,"count":2}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13594,"endOffset":13636,"count":12}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14153,"endOffset":14434,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14301,"endOffset":14428,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14332,"endOffset":14381,"count":2}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":6164,"endOffset":6433,"count":49}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9768,"endOffset":9845,"count":64}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9858,"endOffset":9954,"count":231}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9967,"endOffset":10323,"count":155},{"startOffset":10044,"endOffset":10211,"count":0},{"startOffset":10267,"endOffset":10293,"count":23},{"startOffset":10293,"endOffset":10322,"count":132}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10596,"endOffset":10707,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10872,"endOffset":11549,"count":29},{"startOffset":10954,"endOffset":11150,"count":0},{"startOffset":11216,"endOffset":11518,"count":9},{"startOffset":11479,"endOffset":11483,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12869,"endOffset":13717,"count":415}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13923,"endOffset":14298,"count":387}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2883,"endOffset":2976,"count":1}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":15191,"endOffset":15499,"count":4}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15225,"endOffset":15438,"count":2185}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":56},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":1},{"startOffset":4303,"endOffset":4594,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13335,"endOffset":13373,"count":68}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":1},{"startOffset":15686,"endOffset":15721,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":5}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":1}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":1}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":1}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":1},{"startOffset":17550,"endOffset":17576,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":1},{"startOffset":17651,"endOffset":17676,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":1},{"startOffset":18296,"endOffset":18346,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":1},{"startOffset":18839,"endOffset":18852,"count":0},{"startOffset":18933,"endOffset":19042,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1111,"endOffset":1172,"count":70}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1931,"endOffset":2253,"count":5},{"startOffset":2026,"endOffset":2199,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3158,"endOffset":3632,"count":3},{"startOffset":3332,"endOffset":3402,"count":0},{"startOffset":3437,"endOffset":3507,"count":0},{"startOffset":3545,"endOffset":3627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3882,"endOffset":4327,"count":5},{"startOffset":3953,"endOffset":4019,"count":0},{"startOffset":4052,"endOffset":4118,"count":0},{"startOffset":4143,"endOffset":4146,"count":0},{"startOffset":4246,"endOffset":4324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4529,"endOffset":4644,"count":1921}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":5355,"count":4},{"startOffset":4978,"endOffset":5032,"count":0},{"startOffset":5125,"endOffset":5139,"count":0},{"startOffset":5165,"endOffset":5352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5896,"count":1},{"startOffset":5626,"endOffset":5893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5701,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6102,"endOffset":6219,"count":4},{"startOffset":6161,"endOffset":6216,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6585,"endOffset":7633,"count":7},{"startOffset":6677,"endOffset":6925,"count":3},{"startOffset":6729,"endOffset":6803,"count":0},{"startOffset":6844,"endOffset":6918,"count":0},{"startOffset":6925,"endOffset":7628,"count":4},{"startOffset":7060,"endOffset":7134,"count":0},{"startOffset":7236,"endOffset":7258,"count":0},{"startOffset":7260,"endOffset":7334,"count":0},{"startOffset":7495,"endOffset":7545,"count":0},{"startOffset":7547,"endOffset":7621,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13318,"endOffset":13437,"count":11}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2444,"endOffset":3114,"count":1}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2545,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2595,"endOffset":3110,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3887,"endOffset":4974,"count":1}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4263,"endOffset":4574,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5519,"endOffset":5653,"count":77},{"startOffset":5590,"endOffset":5608,"count":0},{"startOffset":5624,"endOffset":5652,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11255,"endOffset":13172,"count":3},{"startOffset":11378,"endOffset":11434,"count":1},{"startOffset":11525,"endOffset":11811,"count":0},{"startOffset":12952,"endOffset":13118,"count":10}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":12017,"endOffset":12553,"count":0}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16207,"endOffset":16435,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":16957,"endOffset":17928,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17182,"endOffset":17331,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17439,"endOffset":17642,"count":2}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":17932,"endOffset":18873,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18151,"endOffset":18397,"count":4},{"startOffset":18200,"endOffset":18255,"count":0},{"startOffset":18281,"endOffset":18314,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18509,"endOffset":18583,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18877,"endOffset":18979,"count":1}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20221,"endOffset":20419,"count":108}],"isBlockCoverage":true},{"functionName":"getInternalGlobal","ranges":[{"startOffset":20444,"endOffset":20726,"count":54},{"startOffset":20506,"endOffset":20697,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":20730,"endOffset":20946,"count":53}],"isBlockCoverage":true},{"functionName":"getCrossRelmRegex","ranges":[{"startOffset":20995,"endOffset":21803,"count":31},{"startOffset":21093,"endOffset":21107,"count":30},{"startOffset":21107,"endOffset":21178,"count":1},{"startOffset":21178,"endOffset":21196,"count":0},{"startOffset":21196,"endOffset":21300,"count":1},{"startOffset":21300,"endOffset":21318,"count":0},{"startOffset":21318,"endOffset":21362,"count":1},{"startOffset":21362,"endOffset":21380,"count":0},{"startOffset":21380,"endOffset":21421,"count":1},{"startOffset":21421,"endOffset":21439,"count":0},{"startOffset":21439,"endOffset":21481,"count":1},{"startOffset":21481,"endOffset":21499,"count":0},{"startOffset":21499,"endOffset":21540,"count":1},{"startOffset":21540,"endOffset":21558,"count":0},{"startOffset":21558,"endOffset":21802,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":21807,"endOffset":21963,"count":31}],"isBlockCoverage":true},{"functionName":"getLazy","ranges":[{"startOffset":22500,"endOffset":22722,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22584,"endOffset":22718,"count":266},{"startOffset":22629,"endOffset":22694,"count":2}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22851,"endOffset":23545,"count":1},{"startOffset":23331,"endOffset":23513,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23622,"endOffset":23722,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23726,"endOffset":24300,"count":2}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23805,"endOffset":23874,"count":2}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":23880,"endOffset":24107,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24113,"endOffset":24247,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24253,"endOffset":24297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":535,"endOffset":674,"count":177},{"startOffset":593,"endOffset":649,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":818,"endOffset":967,"count":5},{"startOffset":875,"endOffset":937,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":971,"endOffset":1055,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":1059,"endOffset":1499,"count":177},{"startOffset":1269,"endOffset":1298,"count":9},{"startOffset":1299,"endOffset":1328,"count":7},{"startOffset":1334,"endOffset":1454,"count":7},{"startOffset":1454,"endOffset":1495,"count":170}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":147}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":2}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util/inspect","functions":[{"functionName":"formatWithOptions","ranges":[{"startOffset":74769,"endOffset":74964,"count":1}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75352,"endOffset":79500,"count":1},{"startOffset":75581,"endOffset":79288,"count":0},{"startOffset":79293,"endOffset":79499,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":523,"endOffset":1008,"count":1},{"startOffset":617,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":898,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":988,"endOffset":999,"count":3}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1449,"endOffset":1457,"count":316}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1586,"endOffset":2160,"count":3},{"startOffset":1662,"endOffset":2130,"count":2},{"startOffset":1682,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1774,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2386,"endOffset":3452,"count":3}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2418,"endOffset":2517,"count":3}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2533,"endOffset":2939,"count":3},{"startOffset":2788,"endOffset":2818,"count":1},{"startOffset":2826,"endOffset":2865,"count":1},{"startOffset":2873,"endOffset":2927,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2971,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3064,"endOffset":3265,"count":3},{"startOffset":3114,"endOffset":3144,"count":1},{"startOffset":3152,"endOffset":3191,"count":1},{"startOffset":3199,"endOffset":3253,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3339,"endOffset":3375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6796,"endOffset":6867,"count":4}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8371,"endOffset":8451,"count":7}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8564,"endOffset":8614,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10314,"endOffset":11004,"count":4}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13903,"endOffset":16285,"count":32}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16290,"endOffset":18239,"count":5}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18425,"endOffset":18519,"count":5}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19204,"endOffset":19451,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19650,"endOffset":19781,"count":1}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":20415,"endOffset":21872,"count":1},{"startOffset":20569,"endOffset":20581,"count":0},{"startOffset":20658,"endOffset":20670,"count":0},{"startOffset":20850,"endOffset":21107,"count":0},{"startOffset":21116,"endOffset":21843,"count":0}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":25303,"endOffset":26038,"count":1},{"startOffset":25492,"endOffset":25644,"count":0},{"startOffset":25680,"endOffset":26015,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4215,"endOffset":4343,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8350,"endOffset":8378,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8647,"endOffset":9644,"count":1}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11527,"endOffset":11806,"count":2},{"startOffset":11640,"endOffset":11653,"count":0},{"startOffset":11654,"endOffset":11665,"count":0},{"startOffset":11667,"endOffset":11771,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12344,"endOffset":12463,"count":2}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13145,"endOffset":13708,"count":1}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13712,"endOffset":14153,"count":1}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16100,"endOffset":16254,"count":75}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17933,"endOffset":17997,"count":1}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18011,"endOffset":18057,"count":2}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21411,"endOffset":23283,"count":3},{"startOffset":21565,"endOffset":21806,"count":0},{"startOffset":21812,"endOffset":22239,"count":0},{"startOffset":22245,"endOffset":22403,"count":0},{"startOffset":22409,"endOffset":22569,"count":0},{"startOffset":22575,"endOffset":22964,"count":0},{"startOffset":22970,"endOffset":23105,"count":0},{"startOffset":23111,"endOffset":23275,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24744,"endOffset":25353,"count":2},{"startOffset":24817,"endOffset":24867,"count":0},{"startOffset":24924,"endOffset":24934,"count":0},{"startOffset":24966,"endOffset":24976,"count":0},{"startOffset":25029,"endOffset":25041,"count":0},{"startOffset":25058,"endOffset":25081,"count":0},{"startOffset":25110,"endOffset":25120,"count":0},{"startOffset":25159,"endOffset":25193,"count":0},{"startOffset":25268,"endOffset":25309,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":27324,"endOffset":27426,"count":5}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31351,"endOffset":31494,"count":2}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31755,"endOffset":31829,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/per_thread","functions":[{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12734,"endOffset":13074,"count":1},{"startOffset":12815,"endOffset":12996,"count":0},{"startOffset":13028,"endOffset":13071,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3858,"endOffset":4063,"count":141},{"startOffset":3910,"endOffset":3941,"count":75},{"startOffset":3943,"endOffset":4060,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7858,"endOffset":8505,"count":141},{"startOffset":7977,"endOffset":8011,"count":0},{"startOffset":8050,"endOffset":8172,"count":75},{"startOffset":8172,"endOffset":8296,"count":66},{"startOffset":8211,"endOffset":8296,"count":0},{"startOffset":8415,"endOffset":8481,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9878,"endOffset":10197,"count":2}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10328,"endOffset":10387,"count":2}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11012,"endOffset":11096,"count":8}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11596,"endOffset":11710,"count":8}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12915,"endOffset":13470,"count":2}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13820,"endOffset":14056,"count":2},{"startOffset":13939,"endOffset":14008,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14181,"endOffset":15283,"count":2},{"startOffset":14262,"endOffset":14799,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15705,"endOffset":17001,"count":75},{"startOffset":15787,"endOffset":15845,"count":0},{"startOffset":15870,"endOffset":15898,"count":0},{"startOffset":15959,"endOffset":15970,"count":0},{"startOffset":15993,"endOffset":16030,"count":0},{"startOffset":16036,"endOffset":16062,"count":0},{"startOffset":16068,"endOffset":16080,"count":0},{"startOffset":16103,"endOffset":16139,"count":0},{"startOffset":16147,"endOffset":16194,"count":0},{"startOffset":16200,"endOffset":16211,"count":0},{"startOffset":16234,"endOffset":16291,"count":0},{"startOffset":16299,"endOffset":16345,"count":0},{"startOffset":16351,"endOffset":16362,"count":0},{"startOffset":16385,"endOffset":16440,"count":0},{"startOffset":16448,"endOffset":16496,"count":0},{"startOffset":16502,"endOffset":16513,"count":0},{"startOffset":16536,"endOffset":16594,"count":0},{"startOffset":16600,"endOffset":16611,"count":0},{"startOffset":16634,"endOffset":16692,"count":0},{"startOffset":16700,"endOffset":16747,"count":0},{"startOffset":16753,"endOffset":16764,"count":0},{"startOffset":16787,"endOffset":16843,"count":0},{"startOffset":16849,"endOffset":16860,"count":0},{"startOffset":16883,"endOffset":16939,"count":0},{"startOffset":16944,"endOffset":17000,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19101,"endOffset":19833,"count":147},{"startOffset":19164,"endOffset":19186,"count":0},{"startOffset":19188,"endOffset":19297,"count":0},{"startOffset":19494,"endOffset":19514,"count":0},{"startOffset":19585,"endOffset":19654,"count":0},{"startOffset":19675,"endOffset":19832,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":20212,"endOffset":20731,"count":81},{"startOffset":20282,"endOffset":20712,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20776,"endOffset":20938,"count":81}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":330,"endOffset":580,"count":336},{"startOffset":391,"endOffset":539,"count":1}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":83944},{"startOffset":1841,"endOffset":1872,"count":83792}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":2364},{"startOffset":2036,"endOffset":2063,"count":2238},{"startOffset":2065,"endOffset":2132,"count":457},{"startOffset":2104,"endOffset":2131,"count":331}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":1110},{"startOffset":2425,"endOffset":4194,"count":78134},{"startOffset":2460,"endOffset":2502,"count":77024},{"startOffset":2502,"endOffset":2597,"count":1110},{"startOffset":2547,"endOffset":2553,"count":1075},{"startOffset":2553,"endOffset":2597,"count":35},{"startOffset":2597,"endOffset":2632,"count":77059},{"startOffset":2632,"endOffset":4090,"count":8141},{"startOffset":2665,"endOffset":2678,"count":7889},{"startOffset":2680,"endOffset":2707,"count":304},{"startOffset":2707,"endOffset":4044,"count":7837},{"startOffset":2729,"endOffset":3793,"count":15},{"startOffset":2759,"endOffset":2785,"count":8},{"startOffset":2786,"endOffset":2861,"count":0},{"startOffset":2862,"endOffset":2937,"count":0},{"startOffset":2972,"endOffset":3462,"count":8},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":7},{"startOffset":3490,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":7},{"startOffset":3713,"endOffset":3731,"count":0},{"startOffset":3793,"endOffset":4044,"count":7822},{"startOffset":3841,"endOffset":3910,"count":6772},{"startOffset":3910,"endOffset":3987,"count":1050},{"startOffset":4044,"endOffset":4090,"count":8133},{"startOffset":4090,"endOffset":4189,"count":68918},{"startOffset":4118,"endOffset":4132,"count":803},{"startOffset":4134,"endOffset":4157,"count":92},{"startOffset":4157,"endOffset":4189,"count":68826}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4964,"endOffset":9889,"count":1075},{"startOffset":5127,"endOffset":9422,"count":1429},{"startOffset":5165,"endOffset":5345,"count":1428},{"startOffset":5303,"endOffset":5336,"count":1},{"startOffset":5345,"endOffset":6310,"count":1},{"startOffset":5425,"endOffset":6310,"count":0},{"startOffset":6310,"endOffset":6534,"count":1428},{"startOffset":6534,"endOffset":6699,"count":0},{"startOffset":6699,"endOffset":8719,"count":1428},{"startOffset":6732,"endOffset":8254,"count":0},{"startOffset":8290,"endOffset":8361,"count":1380},{"startOffset":8363,"endOffset":8719,"count":1075},{"startOffset":8719,"endOffset":8752,"count":1428},{"startOffset":8752,"endOffset":9080,"count":1075},{"startOffset":8794,"endOffset":9017,"count":0},{"startOffset":9080,"endOffset":9112,"count":1428},{"startOffset":9112,"endOffset":9180,"count":0},{"startOffset":9180,"endOffset":9415,"count":1428},{"startOffset":9346,"endOffset":9374,"count":1075},{"startOffset":9376,"endOffset":9406,"count":1075},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9961,"endOffset":13124,"count":35},{"startOffset":10071,"endOffset":10082,"count":0},{"startOffset":10255,"endOffset":10412,"count":0},{"startOffset":10445,"endOffset":12177,"count":0},{"startOffset":12213,"endOffset":12281,"count":2},{"startOffset":12283,"endOffset":12619,"count":2},{"startOffset":12773,"endOffset":12784,"count":0},{"startOffset":12813,"endOffset":12827,"count":0},{"startOffset":12836,"endOffset":12847,"count":0},{"startOffset":12951,"endOffset":12964,"count":0},{"startOffset":12996,"endOffset":13051,"count":33},{"startOffset":13023,"endOffset":13036,"count":0},{"startOffset":13051,"endOffset":13097,"count":2},{"startOffset":13098,"endOffset":13118,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13197,"endOffset":13626,"count":91},{"startOffset":13308,"endOffset":13321,"count":0},{"startOffset":13498,"endOffset":13557,"count":46},{"startOffset":13558,"endOffset":13619,"count":20}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13701,"endOffset":15911,"count":2},{"startOffset":13752,"endOffset":13763,"count":0},{"startOffset":13846,"endOffset":14075,"count":4},{"startOffset":13987,"endOffset":14059,"count":2},{"startOffset":14116,"endOffset":14127,"count":0},{"startOffset":15016,"endOffset":15479,"count":0},{"startOffset":15690,"endOffset":15723,"count":0},{"startOffset":15803,"endOffset":15860,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20173,"endOffset":21304,"count":558},{"startOffset":20313,"endOffset":20325,"count":0},{"startOffset":20419,"endOffset":20431,"count":0},{"startOffset":20511,"endOffset":20930,"count":0},{"startOffset":21279,"endOffset":21303,"count":0}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21376,"endOffset":24011,"count":199},{"startOffset":21484,"endOffset":21495,"count":0},{"startOffset":21616,"endOffset":21780,"count":0},{"startOffset":21843,"endOffset":23263,"count":0},{"startOffset":23464,"endOffset":23467,"count":0},{"startOffset":23597,"endOffset":23854,"count":2103},{"startOffset":23663,"endOffset":23752,"count":197},{"startOffset":23752,"endOffset":23847,"count":1906},{"startOffset":23878,"endOffset":23958,"count":2},{"startOffset":23916,"endOffset":23927,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24114,"endOffset":26969,"count":53},{"startOffset":24177,"endOffset":24207,"count":0},{"startOffset":24705,"endOffset":24725,"count":0},{"startOffset":24726,"endOffset":24757,"count":0},{"startOffset":24759,"endOffset":26325,"count":0},{"startOffset":26378,"endOffset":26871,"count":584},{"startOffset":26444,"endOffset":26675,"count":53},{"startOffset":26675,"endOffset":26864,"count":531},{"startOffset":26697,"endOffset":26864,"count":53},{"startOffset":26902,"endOffset":26912,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3656,"endOffset":4486,"count":117}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4254,"endOffset":4321,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4327,"endOffset":4404,"count":59}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4410,"endOffset":4483,"count":59}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":22499,"endOffset":22626,"count":161},{"startOffset":22551,"endOffset":22567,"count":14},{"startOffset":22568,"endOffset":22594,"count":14},{"startOffset":22595,"endOffset":22621,"count":14}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22630,"endOffset":33610,"count":117}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":22766,"endOffset":23263,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23275,"endOffset":23604,"count":117},{"startOffset":23347,"endOffset":23397,"count":0},{"startOffset":23507,"endOffset":23540,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23610,"endOffset":24355,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":24361,"endOffset":24701,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":24707,"endOffset":24821,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":24827,"endOffset":25273,"count":97},{"startOffset":25098,"endOffset":25268,"count":0}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":25528,"endOffset":27216,"count":100},{"startOffset":25638,"endOffset":25659,"count":0},{"startOffset":25660,"endOffset":25759,"count":0},{"startOffset":26481,"endOffset":27211,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":27222,"endOffset":27411,"count":42}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":27417,"endOffset":27606,"count":55}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":27612,"endOffset":27836,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":27857,"endOffset":28755,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":28761,"endOffset":28867,"count":45}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":28873,"endOffset":29051,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":29057,"endOffset":29289,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":29295,"endOffset":29473,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":29479,"endOffset":29707,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":29713,"endOffset":29891,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":29897,"endOffset":30339,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":30345,"endOffset":30515,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":30521,"endOffset":30810,"count":31},{"startOffset":30690,"endOffset":30717,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":30816,"endOffset":30994,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":31000,"endOffset":31113,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":31119,"endOffset":31289,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":31295,"endOffset":31595,"count":59},{"startOffset":31363,"endOffset":31415,"count":0},{"startOffset":31448,"endOffset":31498,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":31601,"endOffset":31779,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":31785,"endOffset":31986,"count":0}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":31992,"endOffset":32201,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":32222,"endOffset":32588,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":32594,"endOffset":32814,"count":0}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":32820,"endOffset":32990,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":32996,"endOffset":33183,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":33196,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":41599,"endOffset":43129,"count":31},{"startOffset":41746,"endOffset":42125,"count":2824},{"startOffset":41778,"endOffset":42120,"count":31},{"startOffset":41957,"endOffset":41972,"count":0},{"startOffset":41975,"endOffset":42113,"count":0},{"startOffset":42283,"endOffset":42729,"count":0},{"startOffset":43013,"endOffset":43081,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":43674,"endOffset":44095,"count":31},{"startOffset":43804,"endOffset":43825,"count":17},{"startOffset":43825,"endOffset":43921,"count":14},{"startOffset":43857,"endOffset":43921,"count":0},{"startOffset":43961,"endOffset":44002,"count":0},{"startOffset":44064,"endOffset":44091,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":44929,"endOffset":45792,"count":31},{"startOffset":45085,"endOffset":45156,"count":0},{"startOffset":45245,"endOffset":45293,"count":0},{"startOffset":45300,"endOffset":45373,"count":0},{"startOffset":45433,"endOffset":45504,"count":0},{"startOffset":45564,"endOffset":45642,"count":0},{"startOffset":45702,"endOffset":45769,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":45796,"endOffset":48008,"count":31},{"startOffset":45970,"endOffset":46785,"count":0},{"startOffset":46858,"endOffset":46888,"count":0},{"startOffset":47211,"endOffset":47263,"count":0},{"startOffset":47270,"endOffset":47286,"count":0},{"startOffset":47765,"endOffset":47837,"count":0},{"startOffset":47896,"endOffset":47964,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":48012,"endOffset":48153,"count":147},{"startOffset":48110,"endOffset":48152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1109,"endOffset":1197,"count":8},{"startOffset":1186,"endOffset":1189,"count":1},{"startOffset":1190,"endOffset":1193,"count":7}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1511,"endOffset":2522,"count":7},{"startOffset":1616,"endOffset":2372,"count":1},{"startOffset":1823,"endOffset":1858,"count":0},{"startOffset":1995,"endOffset":2037,"count":0},{"startOffset":2051,"endOffset":2102,"count":0},{"startOffset":2116,"endOffset":2176,"count":0},{"startOffset":2190,"endOffset":2217,"count":0},{"startOffset":2306,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2670,"endOffset":3575,"count":1},{"startOffset":2775,"endOffset":2782,"count":0},{"startOffset":2834,"endOffset":2848,"count":0},{"startOffset":2897,"endOffset":2948,"count":0},{"startOffset":2954,"endOffset":3019,"count":0},{"startOffset":3025,"endOffset":3172,"count":0},{"startOffset":3485,"endOffset":3545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2232,"endOffset":2324,"count":14},{"startOffset":2313,"endOffset":2316,"count":7},{"startOffset":2317,"endOffset":2320,"count":7}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2557,"endOffset":3106,"count":1},{"startOffset":2716,"endOffset":2770,"count":0},{"startOffset":2776,"endOffset":2834,"count":0},{"startOffset":2840,"endOffset":2896,"count":0},{"startOffset":2902,"endOffset":2956,"count":0},{"startOffset":2962,"endOffset":3043,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3110,"endOffset":3697,"count":14},{"startOffset":3211,"endOffset":3278,"count":1},{"startOffset":3303,"endOffset":3394,"count":7},{"startOffset":3400,"endOffset":3485,"count":7},{"startOffset":3491,"endOffset":3588,"count":0},{"startOffset":3594,"endOffset":3689,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":4141,"endOffset":4719,"count":7}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4204,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4723,"endOffset":5573,"count":7},{"startOffset":4930,"endOffset":5449,"count":0},{"startOffset":5496,"endOffset":5534,"count":0},{"startOffset":5541,"endOffset":5570,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6892,"endOffset":10162,"count":7},{"startOffset":7053,"endOffset":7237,"count":0},{"startOffset":7500,"endOffset":8791,"count":0},{"startOffset":8801,"endOffset":8911,"count":0},{"startOffset":8921,"endOffset":9090,"count":0},{"startOffset":9100,"endOffset":9545,"count":0},{"startOffset":9555,"endOffset":9840,"count":0},{"startOffset":9857,"endOffset":10063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":16}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":1}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":8},{"startOffset":3470,"endOffset":3482,"count":7},{"startOffset":3482,"endOffset":3595,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":8}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":1},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":8},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":983,"endOffset":1322,"count":1},{"startOffset":1047,"endOffset":1319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":true},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2},{"startOffset":1627,"endOffset":1670,"count":0},{"startOffset":1719,"endOffset":1940,"count":0},{"startOffset":2219,"endOffset":2766,"count":0}],"isBlockCoverage":true},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":2},{"startOffset":3315,"endOffset":3391,"count":0},{"startOffset":3392,"endOffset":3464,"count":0},{"startOffset":3485,"endOffset":3780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":372,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1727,"endOffset":1792,"count":17}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1796,"endOffset":2398,"count":1},{"startOffset":1908,"endOffset":2096,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2402,"endOffset":3018,"count":17},{"startOffset":2709,"endOffset":2744,"count":0},{"startOffset":2800,"endOffset":2938,"count":0},{"startOffset":2940,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3481,"endOffset":5425,"count":17},{"startOffset":3685,"endOffset":3705,"count":0},{"startOffset":3708,"endOffset":3715,"count":0},{"startOffset":3866,"endOffset":3965,"count":0},{"startOffset":4003,"endOffset":4071,"count":0},{"startOffset":4163,"endOffset":4182,"count":0},{"startOffset":4481,"endOffset":4487,"count":7},{"startOffset":4488,"endOffset":4502,"count":10},{"startOffset":4530,"endOffset":4724,"count":0},{"startOffset":4753,"endOffset":5031,"count":0},{"startOffset":5361,"endOffset":5417,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5976,"endOffset":6512,"count":17},{"startOffset":6117,"endOffset":6193,"count":0},{"startOffset":6201,"endOffset":6283,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6707,"endOffset":7521,"count":17},{"startOffset":6882,"endOffset":7457,"count":277230},{"startOffset":7265,"endOffset":7288,"count":269564},{"startOffset":7289,"endOffset":7312,"count":269564},{"startOffset":7314,"endOffset":7452,"count":7666}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":7527,"endOffset":7817,"count":17},{"startOffset":7761,"endOffset":7814,"count":10}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8883,"endOffset":9299,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9151,"count":7},{"startOffset":9053,"endOffset":9103,"count":0}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1957,"endOffset":2060,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":6036,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6253,"endOffset":6351,"count":3},{"startOffset":6287,"endOffset":6310,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6364,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6530,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6645,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8344,"endOffset":9834,"count":1},{"startOffset":8575,"endOffset":8589,"count":0},{"startOffset":8665,"endOffset":8691,"count":0},{"startOffset":8732,"endOffset":8932,"count":0},{"startOffset":8993,"endOffset":9021,"count":0},{"startOffset":9471,"endOffset":9761,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9934,"endOffset":10359,"count":1},{"startOffset":10155,"endOffset":10281,"count":0},{"startOffset":10304,"endOffset":10326,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10457,"endOffset":10641,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11921,"count":1},{"startOffset":11362,"endOffset":11380,"count":0},{"startOffset":11404,"endOffset":11442,"count":0},{"startOffset":11444,"endOffset":11916,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11957,"endOffset":12046,"count":1}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":21114,"endOffset":22133,"count":1},{"startOffset":21444,"endOffset":22132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22023,"endOffset":22128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"49","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13923,"endOffset":14147,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":30491,"endOffset":32002,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30654,"endOffset":30793,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30898,"endOffset":31756,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":32032,"endOffset":32740,"count":1},{"startOffset":32474,"endOffset":32640,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":32103,"endOffset":32248,"count":2}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1470,"endOffset":3134,"count":2},{"startOffset":1626,"endOffset":1765,"count":1},{"startOffset":1773,"endOffset":1972,"count":0},{"startOffset":1980,"endOffset":1992,"count":1},{"startOffset":1998,"endOffset":2733,"count":1},{"startOffset":2288,"endOffset":2316,"count":0},{"startOffset":2318,"endOffset":2546,"count":0},{"startOffset":2741,"endOffset":3004,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2936,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3780,"endOffset":3875,"count":2},{"startOffset":3835,"endOffset":3872,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3879,"endOffset":4591,"count":1},{"startOffset":3917,"endOffset":3931,"count":0},{"startOffset":4171,"endOffset":4231,"count":0}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4248,"endOffset":4431,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4595,"endOffset":5305,"count":2},{"startOffset":4633,"endOffset":5304,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4962,"endOffset":5145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"55","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":6}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1},{"startOffset":949,"endOffset":1044,"count":0}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":2}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":2}],"isBlockCoverage":false}]},{"scriptId":"57","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5379,"endOffset":5646,"count":788},{"startOffset":5583,"endOffset":5603,"count":106}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11733,"endOffset":13429,"count":70},{"startOffset":11858,"endOffset":11889,"count":0},{"startOffset":12067,"endOffset":12160,"count":0},{"startOffset":12161,"endOffset":12201,"count":0},{"startOffset":12292,"endOffset":12302,"count":0},{"startOffset":12303,"endOffset":12306,"count":0},{"startOffset":12441,"endOffset":13428,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":70905,"endOffset":71003,"count":53}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":71254,"endOffset":71549,"count":53},{"startOffset":71340,"endOffset":71370,"count":0},{"startOffset":71391,"endOffset":71548,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":71677,"endOffset":71945,"count":447},{"startOffset":71734,"endOffset":71924,"count":4201},{"startOffset":71869,"endOffset":71897,"count":3807},{"startOffset":71908,"endOffset":71917,"count":394},{"startOffset":71924,"endOffset":71944,"count":53}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":72231,"endOffset":76179,"count":66},{"startOffset":72358,"endOffset":72378,"count":0},{"startOffset":72545,"endOffset":72582,"count":13},{"startOffset":72582,"endOffset":73360,"count":53},{"startOffset":73306,"endOffset":73329,"count":0},{"startOffset":73360,"endOffset":73502,"count":53},{"startOffset":73502,"endOffset":76102,"count":447},{"startOffset":73618,"endOffset":73754,"count":53},{"startOffset":73754,"endOffset":73916,"count":394},{"startOffset":74036,"endOffset":74179,"count":341},{"startOffset":74129,"endOffset":74155,"count":0},{"startOffset":74179,"endOffset":74248,"count":106},{"startOffset":74286,"endOffset":74337,"count":0},{"startOffset":74337,"endOffset":75562,"count":106},{"startOffset":74639,"endOffset":74666,"count":0},{"startOffset":74801,"endOffset":75480,"count":0},{"startOffset":75525,"endOffset":75555,"count":0},{"startOffset":75562,"endOffset":75887,"count":0},{"startOffset":75889,"endOffset":76097,"count":0},{"startOffset":76102,"endOffset":76118,"count":53}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":3648,"endOffset":3739,"count":1},{"startOffset":3695,"endOffset":3731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3790,"endOffset":3833,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":5275,"endOffset":5701,"count":276},{"startOffset":5375,"endOffset":5476,"count":120},{"startOffset":5453,"endOffset":5471,"count":22},{"startOffset":5476,"endOffset":5551,"count":254},{"startOffset":5551,"endOffset":5565,"count":98},{"startOffset":5567,"endOffset":5680,"count":41},{"startOffset":5680,"endOffset":5700,"count":254}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":6212,"endOffset":6419,"count":79},{"startOffset":6285,"endOffset":6295,"count":78},{"startOffset":6313,"endOffset":6366,"count":78},{"startOffset":6323,"endOffset":6365,"count":26},{"startOffset":6368,"endOffset":6416,"count":72}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":6542,"endOffset":6702,"count":160},{"startOffset":6624,"endOffset":6639,"count":0},{"startOffset":6641,"endOffset":6699,"count":0}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":7316,"endOffset":8093,"count":53},{"startOffset":7639,"endOffset":7649,"count":0},{"startOffset":7668,"endOffset":8039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10140,"endOffset":10167,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":10911,"endOffset":11425,"count":1}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":12341,"endOffset":13655,"count":15},{"startOffset":12466,"endOffset":12549,"count":1},{"startOffset":12549,"endOffset":12646,"count":14},{"startOffset":12646,"endOffset":12691,"count":0},{"startOffset":12692,"endOffset":12760,"count":0},{"startOffset":12787,"endOffset":13634,"count":0},{"startOffset":13634,"endOffset":13654,"count":14}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":14024,"endOffset":14294,"count":87},{"startOffset":14115,"endOffset":14126,"count":45},{"startOffset":14126,"endOffset":14156,"count":42},{"startOffset":14156,"endOffset":14184,"count":0},{"startOffset":14185,"endOffset":14208,"count":42},{"startOffset":14211,"endOffset":14256,"count":0},{"startOffset":14256,"endOffset":14293,"count":42}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14567,"endOffset":14796,"count":29},{"startOffset":14657,"endOffset":14776,"count":59},{"startOffset":14739,"endOffset":14771,"count":14},{"startOffset":14776,"endOffset":14795,"count":15}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14986,"endOffset":15474,"count":53},{"startOffset":15268,"endOffset":15281,"count":0},{"startOffset":15454,"endOffset":15473,"count":0}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":15603,"endOffset":15908,"count":66},{"startOffset":15656,"endOffset":15673,"count":1},{"startOffset":15673,"endOffset":15735,"count":65},{"startOffset":15735,"endOffset":15905,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":16123,"endOffset":17079,"count":66},{"startOffset":16183,"endOffset":16200,"count":1},{"startOffset":16200,"endOffset":16325,"count":65},{"startOffset":16326,"endOffset":16351,"count":2},{"startOffset":16353,"endOffset":16378,"count":63},{"startOffset":16378,"endOffset":16428,"count":2},{"startOffset":16428,"endOffset":16456,"count":0},{"startOffset":16456,"endOffset":16626,"count":2},{"startOffset":16518,"endOffset":16595,"count":0},{"startOffset":16626,"endOffset":17076,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":17441,"endOffset":18279,"count":63},{"startOffset":17651,"endOffset":17666,"count":33},{"startOffset":17682,"endOffset":17693,"count":33},{"startOffset":17693,"endOffset":17819,"count":30},{"startOffset":17821,"endOffset":18276,"count":14},{"startOffset":18107,"endOffset":18271,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18581,"endOffset":22798,"count":67},{"startOffset":18693,"endOffset":18718,"count":3},{"startOffset":18718,"endOffset":18783,"count":64},{"startOffset":18758,"endOffset":18783,"count":0},{"startOffset":18920,"endOffset":18945,"count":2},{"startOffset":18945,"endOffset":19542,"count":65},{"startOffset":19172,"endOffset":19534,"count":0},{"startOffset":19619,"endOffset":20084,"count":33},{"startOffset":19728,"endOffset":19814,"count":7},{"startOffset":19815,"endOffset":20077,"count":7},{"startOffset":19987,"endOffset":20075,"count":0},{"startOffset":20131,"endOffset":20290,"count":33},{"startOffset":20250,"endOffset":20285,"count":7},{"startOffset":20290,"endOffset":20355,"count":65},{"startOffset":20355,"endOffset":22776,"count":147},{"startOffset":20500,"endOffset":20510,"count":140},{"startOffset":20511,"endOffset":20608,"count":138},{"startOffset":20546,"endOffset":20584,"count":0},{"startOffset":20616,"endOffset":20641,"count":82},{"startOffset":20641,"endOffset":20671,"count":65},{"startOffset":20671,"endOffset":20816,"count":63},{"startOffset":20766,"endOffset":20809,"count":14},{"startOffset":20816,"endOffset":22223,"count":51},{"startOffset":20975,"endOffset":21979,"count":23},{"startOffset":21009,"endOffset":21204,"count":22},{"startOffset":21065,"endOffset":21127,"count":0},{"startOffset":21204,"endOffset":21970,"count":1},{"startOffset":21258,"endOffset":21908,"count":0},{"startOffset":22004,"endOffset":22216,"count":28},{"startOffset":22223,"endOffset":22245,"count":51},{"startOffset":22245,"endOffset":22256,"count":15},{"startOffset":22258,"endOffset":22490,"count":15},{"startOffset":22362,"endOffset":22420,"count":0},{"startOffset":22490,"endOffset":22591,"count":51},{"startOffset":22591,"endOffset":22776,"count":0},{"startOffset":22776,"endOffset":22797,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23142,"endOffset":24753,"count":53},{"startOffset":23647,"endOffset":23722,"count":0},{"startOffset":23724,"endOffset":23771,"count":0},{"startOffset":23901,"endOffset":24727,"count":3776},{"startOffset":24295,"endOffset":24336,"count":3382},{"startOffset":24337,"endOffset":24370,"count":3382},{"startOffset":24372,"endOffset":24590,"count":447},{"startOffset":24400,"endOffset":24546,"count":343},{"startOffset":24590,"endOffset":24720,"count":3329},{"startOffset":24610,"endOffset":24720,"count":1831},{"startOffset":24646,"endOffset":24674,"count":1488},{"startOffset":24674,"endOffset":24711,"count":343}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":26306,"endOffset":27634,"count":66},{"startOffset":26387,"endOffset":26456,"count":0},{"startOffset":26544,"endOffset":26747,"count":34},{"startOffset":26626,"endOffset":26677,"count":26},{"startOffset":26678,"endOffset":26746,"count":0},{"startOffset":26749,"endOffset":27089,"count":32},{"startOffset":26813,"endOffset":26828,"count":31},{"startOffset":26830,"endOffset":26943,"count":31},{"startOffset":26943,"endOffset":26985,"count":1},{"startOffset":27077,"endOffset":27083,"count":0},{"startOffset":27089,"endOffset":27160,"count":34},{"startOffset":27161,"endOffset":27180,"count":34},{"startOffset":27182,"endOffset":27438,"count":0},{"startOffset":27438,"endOffset":27633,"count":34}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":30470,"endOffset":33720,"count":108},{"startOffset":30555,"endOffset":31402,"count":107},{"startOffset":31022,"endOffset":31397,"count":13},{"startOffset":31206,"endOffset":31280,"count":0},{"startOffset":31327,"endOffset":31397,"count":0},{"startOffset":31402,"endOffset":31457,"count":95},{"startOffset":31457,"endOffset":31739,"count":6},{"startOffset":31590,"endOffset":31652,"count":0},{"startOffset":31739,"endOffset":31896,"count":89},{"startOffset":31896,"endOffset":32277,"count":13},{"startOffset":31978,"endOffset":32222,"count":0},{"startOffset":32277,"endOffset":32339,"count":76},{"startOffset":32339,"endOffset":32425,"count":23},{"startOffset":32425,"endOffset":32558,"count":53},{"startOffset":32577,"endOffset":32722,"count":1},{"startOffset":32722,"endOffset":33689,"count":53},{"startOffset":33014,"endOffset":33429,"count":0},{"startOffset":33614,"endOffset":33684,"count":0},{"startOffset":33689,"endOffset":33719,"count":53}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":34193,"endOffset":37419,"count":89},{"startOffset":34291,"endOffset":34318,"count":23},{"startOffset":34318,"endOffset":34372,"count":66},{"startOffset":34372,"endOffset":34391,"count":0},{"startOffset":34393,"endOffset":35517,"count":0},{"startOffset":35517,"endOffset":35616,"count":66},{"startOffset":35616,"endOffset":35664,"count":0},{"startOffset":35666,"endOffset":36325,"count":0},{"startOffset":36325,"endOffset":36491,"count":66},{"startOffset":36491,"endOffset":36692,"count":0},{"startOffset":36692,"endOffset":36856,"count":66},{"startOffset":36856,"endOffset":37418,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":37856,"endOffset":38451,"count":14},{"startOffset":38056,"endOffset":38188,"count":0},{"startOffset":38312,"endOffset":38450,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":39122,"endOffset":39858,"count":53},{"startOffset":39466,"endOffset":39496,"count":0},{"startOffset":39498,"endOffset":39552,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":40153,"endOffset":40464,"count":107},{"startOffset":40215,"endOffset":40336,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":41056,"endOffset":42840,"count":51},{"startOffset":41279,"endOffset":42067,"count":0},{"startOffset":42234,"endOffset":42281,"count":0},{"startOffset":42282,"endOffset":42324,"count":0},{"startOffset":42326,"endOffset":42391,"count":0},{"startOffset":42480,"endOffset":42580,"count":17},{"startOffset":42617,"endOffset":42837,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":43169,"endOffset":45046,"count":51},{"startOffset":43263,"endOffset":43273,"count":0},{"startOffset":43292,"endOffset":43449,"count":0},{"startOffset":43587,"endOffset":43611,"count":0},{"startOffset":43613,"endOffset":44370,"count":0},{"startOffset":44600,"endOffset":44630,"count":1},{"startOffset":44692,"endOffset":44834,"count":0},{"startOffset":45004,"endOffset":45025,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":45231,"endOffset":47207,"count":51},{"startOffset":45396,"endOffset":45404,"count":0},{"startOffset":45406,"endOffset":45474,"count":0},{"startOffset":45650,"endOffset":45672,"count":0},{"startOffset":45770,"endOffset":47160,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":47396,"endOffset":47817,"count":2},{"startOffset":47509,"endOffset":47519,"count":0},{"startOffset":47538,"endOffset":47643,"count":0},{"startOffset":47730,"endOffset":47814,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":50117,"endOffset":51110,"count":1},{"startOffset":50185,"endOffset":50205,"count":0},{"startOffset":50261,"endOffset":50286,"count":0},{"startOffset":50516,"endOffset":50565,"count":0},{"startOffset":50824,"endOffset":50971,"count":0}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1221,"endOffset":1248,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1732,"endOffset":1868,"count":66}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1991,"endOffset":2394,"count":1},{"startOffset":2173,"endOffset":2177,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2466,"endOffset":2598,"count":14},{"startOffset":2532,"endOffset":2570,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2832,"endOffset":3222,"count":29},{"startOffset":2922,"endOffset":2941,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3322,"endOffset":3438,"count":51},{"startOffset":3367,"endOffset":3415,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":4041,"endOffset":6657,"count":51},{"startOffset":4183,"endOffset":4248,"count":0},{"startOffset":4319,"endOffset":5627,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4466,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5650,"endOffset":5793,"count":107}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5987,"endOffset":6136,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":6289,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6877,"endOffset":7037,"count":2},{"startOffset":6960,"endOffset":7015,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9613,"endOffset":10135,"count":17},{"startOffset":9719,"endOffset":9748,"count":0},{"startOffset":9890,"endOffset":9990,"count":0},{"startOffset":9992,"endOffset":10134,"count":0}],"isBlockCoverage":true},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":11023,"endOffset":11099,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":11104,"endOffset":11183,"count":51}],"isBlockCoverage":true},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":11188,"endOffset":11264,"count":1}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1159,"endOffset":3995,"count":242},{"startOffset":1256,"endOffset":1295,"count":200},{"startOffset":1295,"endOffset":1996,"count":42},{"startOffset":1996,"endOffset":2005,"count":0},{"startOffset":2006,"endOffset":2020,"count":0},{"startOffset":2021,"endOffset":2043,"count":42},{"startOffset":2069,"endOffset":3942,"count":27},{"startOffset":2141,"endOffset":2751,"count":0},{"startOffset":2914,"endOffset":2948,"count":21},{"startOffset":2950,"endOffset":2992,"count":21},{"startOffset":3050,"endOffset":3084,"count":21},{"startOffset":3086,"endOffset":3128,"count":21},{"startOffset":3190,"endOffset":3238,"count":7},{"startOffset":3300,"endOffset":3348,"count":0},{"startOffset":3462,"endOffset":3521,"count":11},{"startOffset":3493,"endOffset":3520,"count":5},{"startOffset":3523,"endOffset":3565,"count":11},{"startOffset":3601,"endOffset":3802,"count":1},{"startOffset":3724,"endOffset":3778,"count":0},{"startOffset":3831,"endOffset":3937,"count":0},{"startOffset":3942,"endOffset":3994,"count":42}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":4069,"endOffset":4161,"count":242}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4385,"endOffset":5229,"count":117},{"startOffset":4576,"endOffset":5164,"count":197},{"startOffset":4830,"endOffset":4876,"count":0},{"startOffset":4878,"endOffset":4907,"count":0},{"startOffset":4975,"endOffset":5004,"count":0},{"startOffset":5077,"endOffset":5159,"count":117},{"startOffset":5164,"endOffset":5228,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1678,"endOffset":2072,"count":1},{"startOffset":1864,"endOffset":1868,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":8805,"endOffset":9198,"count":1}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1114,"endOffset":1304,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":2572,"endOffset":4832,"count":1},{"startOffset":3566,"endOffset":3673,"count":0},{"startOffset":4580,"endOffset":4746,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4836,"endOffset":5594,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":5598,"endOffset":6366,"count":1},{"startOffset":5977,"endOffset":6010,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6370,"endOffset":6428,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":6864,"endOffset":9285,"count":1},{"startOffset":7905,"endOffset":7959,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9289,"endOffset":9581,"count":13},{"startOffset":9412,"endOffset":9578,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9585,"endOffset":10123,"count":1},{"startOffset":9971,"endOffset":10115,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10001,"endOffset":10106,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10202,"endOffset":10633,"count":1},{"startOffset":10277,"endOffset":10443,"count":0},{"startOffset":10539,"endOffset":10630,"count":0}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10741,"endOffset":11724,"count":1},{"startOffset":10878,"endOffset":10897,"count":0},{"startOffset":11404,"endOffset":11721,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11079,"endOffset":11259,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11569,"endOffset":11670,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":11728,"endOffset":12260,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12370,"endOffset":12654,"count":1},{"startOffset":12511,"endOffset":12530,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":12658,"endOffset":12891,"count":1},{"startOffset":12763,"endOffset":12890,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":12895,"endOffset":13154,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13045,"endOffset":13143,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":13158,"endOffset":13394,"count":1},{"startOffset":13311,"endOffset":13391,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13459,"endOffset":13652,"count":1},{"startOffset":13548,"endOffset":13649,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":13656,"endOffset":14413,"count":1},{"startOffset":13856,"endOffset":14410,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":13974,"endOffset":14131,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14329,"endOffset":14403,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":14417,"endOffset":14680,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":14684,"endOffset":15279,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15479,"endOffset":17490,"count":1},{"startOffset":16216,"endOffset":16526,"count":16},{"startOffset":16262,"endOffset":16499,"count":0},{"startOffset":16850,"endOffset":17055,"count":0},{"startOffset":17085,"endOffset":17487,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":17494,"endOffset":18076,"count":1},{"startOffset":17571,"endOffset":18073,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":18080,"endOffset":18357,"count":1},{"startOffset":18168,"endOffset":18354,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":18361,"endOffset":20468,"count":1},{"startOffset":18505,"endOffset":20049,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":18530,"endOffset":18619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20293,"endOffset":20458,"count":5},{"startOffset":20373,"endOffset":20451,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":20472,"endOffset":22339,"count":1},{"startOffset":20602,"endOffset":22336,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":22343,"endOffset":22467,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":22471,"endOffset":23069,"count":1},{"startOffset":22813,"endOffset":23066,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":23073,"endOffset":23276,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":23280,"endOffset":23543,"count":1},{"startOffset":23366,"endOffset":23540,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":23656,"endOffset":24015,"count":1},{"startOffset":23853,"endOffset":24012,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":24019,"endOffset":24115,"count":1}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":656,"endOffset":1846,"count":1},{"startOffset":834,"endOffset":941,"count":0},{"startOffset":1240,"endOffset":1251,"count":0},{"startOffset":1485,"endOffset":1816,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":2013,"endOffset":3501,"count":1},{"startOffset":2120,"endOffset":2136,"count":0},{"startOffset":2622,"endOffset":2638,"count":0},{"startOffset":2757,"endOffset":2773,"count":0},{"startOffset":2837,"endOffset":2854,"count":0},{"startOffset":3084,"endOffset":3118,"count":0},{"startOffset":3124,"endOffset":3161,"count":0},{"startOffset":3276,"endOffset":3465,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":5822,"endOffset":6567,"count":1},{"startOffset":6005,"endOffset":6387,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6136,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5671,"endOffset":6169,"count":1},{"startOffset":5818,"endOffset":6027,"count":0},{"startOffset":6079,"endOffset":6168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6106,"endOffset":6164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"makeSyncWrite","ranges":[{"startOffset":1711,"endOffset":2145,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1750,"endOffset":2141,"count":1},{"startOffset":2019,"endOffset":2125,"count":0}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3922,"endOffset":4029,"count":4},{"startOffset":3976,"endOffset":4005,"count":1}],"isBlockCoverage":true}]},{"scriptId":"80","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1211,"count":1}],"isBlockCoverage":false}]},{"scriptId":"81","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13228,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2459,"endOffset":2586,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2633,"endOffset":4132,"count":1},{"startOffset":2738,"endOffset":2786,"count":0},{"startOffset":3297,"endOffset":3362,"count":0},{"startOffset":3985,"endOffset":4056,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4138,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4445,"endOffset":4840,"count":1},{"startOffset":4663,"endOffset":4701,"count":0},{"startOffset":4703,"endOffset":4777,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4846,"endOffset":5020,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5027,"endOffset":5251,"count":1},{"startOffset":5113,"endOffset":5248,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5255,"endOffset":5963,"count":1},{"startOffset":5460,"endOffset":5527,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5967,"endOffset":7061,"count":2},{"startOffset":6027,"endOffset":6037,"count":0},{"startOffset":6371,"endOffset":6434,"count":0},{"startOffset":6487,"endOffset":6919,"count":0},{"startOffset":6969,"endOffset":7032,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7099,"endOffset":8492,"count":2},{"startOffset":7201,"endOffset":7521,"count":1},{"startOffset":7521,"endOffset":7562,"count":0},{"startOffset":7562,"endOffset":7605,"count":1},{"startOffset":7605,"endOffset":7662,"count":0},{"startOffset":7662,"endOffset":7745,"count":1},{"startOffset":7745,"endOffset":7932,"count":0},{"startOffset":7932,"endOffset":8491,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8496,"endOffset":8574,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8732,"endOffset":9207,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9211,"endOffset":9621,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9625,"endOffset":9984,"count":1},{"startOffset":9718,"endOffset":9762,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9988,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10183,"endOffset":11820,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12109,"endOffset":12693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"83","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/bin/npm-prefix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1}],"isBlockCoverage":true},{"functionName":"main","ranges":[{"startOffset":593,"endOffset":849,"count":1},{"startOffset":739,"endOffset":846,"count":0}],"isBlockCoverage":true}]},{"scriptId":"84","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30882,"count":1}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":431,"endOffset":513,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":470,"endOffset":489,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":512,"count":4}],"isBlockCoverage":true},{"functionName":"dirExists","ranges":[{"startOffset":535,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":649,"endOffset":712,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1161,"endOffset":29808,"count":1}],"isBlockCoverage":true},{"functionName":"get typeDefs","ranges":[{"startOffset":1295,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"Config","ranges":[{"startOffset":1344,"endOffset":3308,"count":1},{"startOffset":1877,"endOffset":2063,"count":155},{"startOffset":1970,"endOffset":2056,"count":18},{"startOffset":2813,"endOffset":2882,"count":7},{"startOffset":3206,"endOffset":3245,"count":7}],"isBlockCoverage":true},{"functionName":"Config.data.set","ranges":[{"startOffset":2906,"endOffset":2991,"count":0}],"isBlockCoverage":false},{"functionName":"Config.data.delete","ranges":[{"startOffset":3016,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"get loaded","ranges":[{"startOffset":3314,"endOffset":3359,"count":2}],"isBlockCoverage":true},{"functionName":"get prefix","ranges":[{"startOffset":3365,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":3508,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3908,"endOffset":4064,"count":1},{"startOffset":3950,"endOffset":4025,"count":0}],"isBlockCoverage":true},{"functionName":"#get","ranges":[{"startOffset":4182,"endOffset":4470,"count":10},{"startOffset":4233,"endOffset":4257,"count":2},{"startOffset":4259,"endOffset":4333,"count":0},{"startOffset":4376,"endOffset":4384,"count":8},{"startOffset":4413,"endOffset":4441,"count":2},{"startOffset":4442,"endOffset":4453,"count":8},{"startOffset":4454,"endOffset":4465,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4476,"endOffset":5136,"count":0}],"isBlockCoverage":false},{"functionName":"get flat","ranges":[{"startOffset":5142,"endOffset":5688,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":5694,"endOffset":6093,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":6099,"endOffset":8008,"count":1},{"startOffset":6137,"endOffset":6216,"count":0}],"isBlockCoverage":true},{"functionName":"loadDefaults","ranges":[{"startOffset":8014,"endOffset":9442,"count":1},{"startOffset":8291,"endOffset":8510,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9126,"endOffset":9173,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9182,"endOffset":9376,"count":1}],"isBlockCoverage":true},{"functionName":"loadHome","ranges":[{"startOffset":9448,"endOffset":9510,"count":1},{"startOffset":9493,"endOffset":9505,"count":0}],"isBlockCoverage":true},{"functionName":"loadGlobalPrefix","ranges":[{"startOffset":9516,"endOffset":10158,"count":1},{"startOffset":9566,"endOffset":9649,"count":0},{"startOffset":9678,"endOffset":9729,"count":0},{"startOffset":9871,"endOffset":10153,"count":0}],"isBlockCoverage":true},{"functionName":"loadEnv","ranges":[{"startOffset":10164,"endOffset":10699,"count":1},{"startOffset":10277,"endOffset":10644,"count":86},{"startOffset":10320,"endOffset":10336,"count":11},{"startOffset":10338,"endOffset":10366,"count":76},{"startOffset":10366,"endOffset":10644,"count":10}],"isBlockCoverage":true},{"functionName":"loadCLI","ranges":[{"startOffset":10705,"endOffset":11048,"count":1}],"isBlockCoverage":true},{"functionName":"nopt.invalidHandler","ranges":[{"startOffset":10745,"endOffset":10834,"count":0}],"isBlockCoverage":false},{"functionName":"get valid","ranges":[{"startOffset":11054,"endOffset":11262,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11268,"endOffset":14046,"count":0}],"isBlockCoverage":false},{"functionName":"repair","ranges":[{"startOffset":14208,"endOffset":15212,"count":0}],"isBlockCoverage":false},{"functionName":"isDefault","ranges":[{"startOffset":15426,"endOffset":15744,"count":0}],"isBlockCoverage":false},{"functionName":"invalidHandler","ranges":[{"startOffset":15750,"endOffset":16815,"count":0}],"isBlockCoverage":false},{"functionName":"#getOneOfKeywords","ranges":[{"startOffset":16821,"endOffset":17200,"count":0}],"isBlockCoverage":false},{"functionName":"#loadObject","ranges":[{"startOffset":17206,"endOffset":18590,"count":7},{"startOffset":17360,"endOffset":17515,"count":0},{"startOffset":17553,"endOffset":17720,"count":0},{"startOffset":17799,"endOffset":17946,"count":3},{"startOffset":17861,"endOffset":17939,"count":0},{"startOffset":17946,"endOffset":18585,"count":4},{"startOffset":18031,"endOffset":18578,"count":167},{"startOffset":18157,"endOffset":18543,"count":11},{"startOffset":18257,"endOffset":18268,"count":7},{"startOffset":18270,"endOffset":18532,"count":0}],"isBlockCoverage":true},{"functionName":"#checkDeprecated","ranges":[{"startOffset":18596,"endOffset":18778,"count":11},{"startOffset":18712,"endOffset":18773,"count":0}],"isBlockCoverage":true},{"functionName":"parseField","ranges":[{"startOffset":18845,"endOffset":18942,"count":167}],"isBlockCoverage":true},{"functionName":"#loadFile","ranges":[{"startOffset":18948,"endOffset":19671,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19153,"endOffset":19549,"count":1},{"startOffset":19241,"endOffset":19263,"count":0},{"startOffset":19265,"endOffset":19481,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19558,"endOffset":19602,"count":3}],"isBlockCoverage":true},{"functionName":"loadBuiltinConfig","ranges":[{"startOffset":19677,"endOffset":19774,"count":1}],"isBlockCoverage":true},{"functionName":"loadProjectConfig","ranges":[{"startOffset":19780,"endOffset":21197,"count":1},{"startOffset":20179,"endOffset":20265,"count":0},{"startOffset":20345,"endOffset":20509,"count":0},{"startOffset":21034,"endOffset":21192,"count":0}],"isBlockCoverage":true},{"functionName":"loadLocalPrefix","ranges":[{"startOffset":21203,"endOffset":23701,"count":1},{"startOffset":21300,"endOffset":21358,"count":0},{"startOffset":21540,"endOffset":23622,"count":6},{"startOffset":21715,"endOffset":21736,"count":0},{"startOffset":21738,"endOffset":21763,"count":0},{"startOffset":21863,"endOffset":21920,"count":1},{"startOffset":21882,"endOffset":21920,"count":0},{"startOffset":21922,"endOffset":22226,"count":1},{"startOffset":22126,"endOffset":22156,"count":0},{"startOffset":22226,"endOffset":22274,"count":5},{"startOffset":22276,"endOffset":23615,"count":1},{"startOffset":22660,"endOffset":22692,"count":0},{"startOffset":22871,"endOffset":23606,"count":0},{"startOffset":23653,"endOffset":23696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22628,"endOffset":22639,"count":0}],"isBlockCoverage":false},{"functionName":"loadUserConfig","ranges":[{"startOffset":23707,"endOffset":23791,"count":1}],"isBlockCoverage":true},{"functionName":"loadGlobalConfig","ranges":[{"startOffset":23797,"endOffset":23887,"count":1}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":23893,"endOffset":25082,"count":0}],"isBlockCoverage":false},{"functionName":"clearCredentialsByURI","ranges":[{"startOffset":25088,"endOffset":25993,"count":0}],"isBlockCoverage":false},{"functionName":"setCredentialsByURI","ranges":[{"startOffset":25999,"endOffset":27635,"count":0}],"isBlockCoverage":false},{"functionName":"getCredentialsByURI","ranges":[{"startOffset":27721,"endOffset":29593,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvs","ranges":[{"startOffset":29769,"endOffset":29805,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29886,"endOffset":30853,"count":7}],"isBlockCoverage":true},{"functionName":"ConfigData","ranges":[{"startOffset":29950,"endOffset":30077,"count":7},{"startOffset":30012,"endOffset":30026,"count":6}],"isBlockCoverage":true},{"functionName":"get data","ranges":[{"startOffset":30083,"endOffset":30124,"count":191}],"isBlockCoverage":true},{"functionName":"get valid","ranges":[{"startOffset":30130,"endOffset":30174,"count":0}],"isBlockCoverage":false},{"functionName":"set source","ranges":[{"startOffset":30180,"endOffset":30325,"count":7},{"startOffset":30220,"endOffset":30298,"count":0}],"isBlockCoverage":true},{"functionName":"get source","ranges":[{"startOffset":30331,"endOffset":30376,"count":7}],"isBlockCoverage":true},{"functionName":"set loadError","ranges":[{"startOffset":30382,"endOffset":30572,"count":3},{"startOffset":30464,"endOffset":30541,"count":0}],"isBlockCoverage":true},{"functionName":"get loadError","ranges":[{"startOffset":30578,"endOffset":30630,"count":0}],"isBlockCoverage":false},{"functionName":"set raw","ranges":[{"startOffset":30636,"endOffset":30805,"count":4},{"startOffset":30710,"endOffset":30781,"count":0}],"isBlockCoverage":true},{"functionName":"get raw","ranges":[{"startOffset":30811,"endOffset":30850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47075,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2876,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":4051,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5255,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7600,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":9175,"endOffset":10689,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":11112,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11732,"endOffset":11931,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12580,"endOffset":12969,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13436,"endOffset":13824,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15202,"endOffset":18033,"count":14},{"startOffset":15383,"endOffset":15394,"count":0},{"startOffset":15395,"endOffset":15431,"count":0},{"startOffset":15433,"endOffset":15519,"count":0},{"startOffset":15571,"endOffset":16141,"count":0},{"startOffset":16235,"endOffset":16859,"count":0},{"startOffset":17084,"endOffset":17170,"count":0},{"startOffset":17216,"endOffset":18032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15909,"endOffset":15922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16448,"endOffset":16461,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16597,"endOffset":16610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17354,"endOffset":17367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17598,"endOffset":17611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17962,"endOffset":17975,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":18232,"endOffset":18380,"count":56},{"startOffset":18330,"endOffset":18376,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":19190,"endOffset":21506,"count":42},{"startOffset":19385,"endOffset":19543,"count":14},{"startOffset":19543,"endOffset":21386,"count":28},{"startOffset":19575,"endOffset":20454,"count":0},{"startOffset":20609,"endOffset":20844,"count":56},{"startOffset":20669,"endOffset":20837,"count":0},{"startOffset":20888,"endOffset":21307,"count":55},{"startOffset":20947,"endOffset":20969,"count":41},{"startOffset":20971,"endOffset":21300,"count":28},{"startOffset":21247,"endOffset":21260,"count":0},{"startOffset":21307,"endOffset":21386,"count":0},{"startOffset":21386,"endOffset":21505,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21798,"endOffset":22762,"count":14},{"startOffset":21931,"endOffset":21947,"count":0},{"startOffset":22004,"endOffset":22021,"count":0},{"startOffset":22166,"endOffset":22729,"count":27},{"startOffset":22279,"endOffset":22338,"count":14},{"startOffset":22338,"endOffset":22724,"count":13},{"startOffset":22394,"endOffset":22724,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23270,"endOffset":25920,"count":14},{"startOffset":23481,"endOffset":23520,"count":0},{"startOffset":23933,"endOffset":24009,"count":0},{"startOffset":24043,"endOffset":25919,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26303,"endOffset":26870,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27368,"endOffset":29883,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":30003,"endOffset":30119,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":30291,"endOffset":31381,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":31714,"endOffset":33842,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33959,"endOffset":34071,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":34196,"endOffset":34483,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34638,"endOffset":34833,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":35205,"endOffset":36615,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36823,"endOffset":38696,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":39086,"endOffset":40499,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":40645,"endOffset":40925,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":41560,"endOffset":45321,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45592,"endOffset":46217,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46664,"endOffset":47069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2284,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1099,"endOffset":2228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6880,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":984,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1087,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1597,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"underNodeModules","ranges":[{"startOffset":2206,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2580,"endOffset":5490,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":5633,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":6140,"endOffset":6381,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":6533,"endOffset":6762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1861,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":687,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1413,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"walkUp","ranges":[{"startOffset":153,"endOffset":412,"count":1},{"startOffset":223,"endOffset":409,"count":6},{"startOffset":319,"endOffset":351,"count":1},{"startOffset":351,"endOffset":402,"count":5}],"isBlockCoverage":true}]},{"scriptId":"90","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/ini/lib/ini.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7369,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":62,"endOffset":2449,"count":0}],"isBlockCoverage":false},{"functionName":"splitSections","ranges":[{"startOffset":2453,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":3082,"endOffset":5921,"count":1},{"startOffset":3426,"endOffset":4951,"count":2},{"startOffset":3443,"endOffset":3468,"count":1},{"startOffset":3469,"endOffset":3491,"count":1},{"startOffset":3493,"endOffset":3569,"count":1},{"startOffset":3569,"endOffset":3593,"count":0},{"startOffset":3593,"endOffset":3627,"count":1},{"startOffset":3627,"endOffset":3928,"count":0},{"startOffset":3928,"endOffset":4084,"count":1},{"startOffset":4084,"endOffset":4198,"count":0},{"startOffset":4198,"endOffset":4224,"count":1},{"startOffset":4224,"endOffset":4245,"count":0},{"startOffset":4246,"endOffset":4254,"count":1},{"startOffset":4285,"endOffset":4309,"count":0},{"startOffset":4309,"endOffset":4359,"count":1},{"startOffset":4360,"endOffset":4366,"count":0},{"startOffset":4406,"endOffset":4436,"count":1},{"startOffset":4437,"endOffset":4466,"count":1},{"startOffset":4467,"endOffset":4489,"count":0},{"startOffset":4497,"endOffset":4507,"count":1},{"startOffset":4578,"endOffset":4730,"count":0},{"startOffset":4730,"endOffset":4876,"count":1},{"startOffset":4876,"endOffset":4910,"count":0},{"startOffset":4910,"endOffset":4946,"count":1},{"startOffset":5202,"endOffset":5233,"count":0},{"startOffset":5259,"endOffset":5772,"count":0},{"startOffset":5774,"endOffset":5845,"count":0},{"startOffset":5875,"endOffset":5902,"count":0}],"isBlockCoverage":true},{"functionName":"isQuoted","ranges":[{"startOffset":5942,"endOffset":6057,"count":2},{"startOffset":5982,"endOffset":6002,"count":0},{"startOffset":6033,"endOffset":6053,"count":0}],"isBlockCoverage":true},{"functionName":"safe","ranges":[{"startOffset":6074,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"unsafe","ranges":[{"startOffset":6368,"endOffset":7260,"count":2},{"startOffset":6391,"endOffset":6396,"count":0},{"startOffset":6427,"endOffset":6649,"count":0},{"startOffset":6810,"endOffset":7167,"count":20},{"startOffset":6859,"endOffset":7013,"count":1},{"startOffset":6900,"endOffset":6934,"count":0},{"startOffset":7013,"endOffset":7160,"count":19},{"startOffset":7047,"endOffset":7072,"count":0},{"startOffset":7094,"endOffset":7124,"count":1},{"startOffset":7124,"endOffset":7160,"count":18},{"startOffset":7182,"endOffset":7211,"count":0},{"startOffset":7243,"endOffset":7259,"count":0}],"isBlockCoverage":true}]},{"scriptId":"91","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"nopt","ranges":[{"startOffset":544,"endOffset":798,"count":1},{"startOffset":670,"endOffset":675,"count":0},{"startOffset":705,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":802,"endOffset":983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/nopt-lib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13297,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":133,"endOffset":185,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":205,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDef","ranges":[{"startOffset":542,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeDef","ranges":[{"startOffset":597,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotHaveTypeDef","ranges":[{"startOffset":672,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"nopt","ranges":[{"startOffset":720,"endOffset":1398,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1269,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1402,"endOffset":4988,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2055,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4992,"endOffset":6850,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6854,"endOffset":11147,"count":1},{"startOffset":7365,"endOffset":11144,"count":0}],"isBlockCoverage":true},{"functionName":"singleCharacters","ranges":[{"startOffset":11211,"endOffset":11610,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShort","ranges":[{"startOffset":11614,"endOffset":13181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/abbrev/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"abbrev","ranges":[{"startOffset":27,"endOffset":1292,"count":2},{"startOffset":87,"endOffset":112,"count":0},{"startOffset":123,"endOffset":129,"count":0},{"startOffset":180,"endOffset":257,"count":195},{"startOffset":235,"endOffset":252,"count":0},{"startOffset":545,"endOffset":1271,"count":195},{"startOffset":608,"endOffset":613,"count":2},{"startOffset":697,"endOffset":721,"count":0},{"startOffset":793,"endOffset":1048,"count":909},{"startOffset":869,"endOffset":898,"count":699},{"startOffset":932,"endOffset":961,"count":726},{"startOffset":986,"endOffset":1001,"count":378},{"startOffset":1003,"endOffset":1041,"count":168},{"startOffset":1088,"endOffset":1146,"count":51},{"startOffset":1146,"endOffset":1200,"count":144},{"startOffset":1200,"endOffset":1266,"count":912},{"startOffset":1266,"endOffset":1271,"count":144}],"isBlockCoverage":true},{"functionName":"lexSort","ranges":[{"startOffset":1296,"endOffset":1363,"count":532},{"startOffset":1340,"endOffset":1343,"count":0},{"startOffset":1352,"endOffset":1355,"count":431},{"startOffset":1356,"endOffset":1360,"count":101}],"isBlockCoverage":true}]},{"scriptId":"94","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":144,"count":1},{"startOffset":97,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":99,"endOffset":128,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":142,"count":3}],"isBlockCoverage":true}]},{"scriptId":"95","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/type-defs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2121,"count":1}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":161,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":233,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":677,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":843,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":1032,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":1322,"endOffset":1578,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":1582,"endOffset":1700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5031,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2543,"endOffset":2708,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3146,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4305,"endOffset":4339,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4443,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4585,"endOffset":4628,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4817,"endOffset":5028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11229,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1062,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1669,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4924,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5418,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5575,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5916,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":6067,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6452,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":7012,"endOffset":7129,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":7136,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8628,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":9077,"endOffset":9278,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":9282,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9619,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":10193,"endOffset":10890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12878,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1679,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1819,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2465,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2737,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3457,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3918,"endOffset":3980,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":4022,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":4146,"endOffset":4228,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4234,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4361,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4578,"endOffset":4725,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4809,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5172,"endOffset":6545,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6551,"endOffset":7333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7339,"endOffset":7699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7705,"endOffset":8335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8341,"endOffset":8605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8611,"endOffset":9074,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9081,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9213,"endOffset":9221,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9724,"endOffset":10150,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10154,"endOffset":10528,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10532,"endOffset":11217,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11372,"endOffset":11568,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11645,"endOffset":11736,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11837,"endOffset":12406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8735,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":939,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1052,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1065,"endOffset":7244,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7248,"endOffset":8188,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8192,"endOffset":8671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9298,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":1152,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1585,"endOffset":1812,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1816,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":2026,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":2311,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2537,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2716,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2894,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":3012,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":3352,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3648,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3977,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":4416,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4752,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":5113,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":5424,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5732,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":6068,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":6294,"endOffset":6516,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":6520,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":7053,"endOffset":7312,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":7316,"endOffset":7448,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7452,"endOffset":7646,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7650,"endOffset":8001,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":8005,"endOffset":8155,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":8159,"endOffset":8474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5703,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":566,"endOffset":5700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12817,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1107,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1558,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1896,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2195,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2379,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3483,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4112,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4211,"endOffset":10909,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10913,"endOffset":12767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7714,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":518,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":955,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1875,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2539,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2633,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2974,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3344,"endOffset":4063,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4067,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5248,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5691,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6471,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6573,"endOffset":6635,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6639,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6800,"endOffset":7613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6794,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2414,"endOffset":4450,"count":2},{"startOffset":2480,"endOffset":2507,"count":0},{"startOffset":3220,"endOffset":3360,"count":1},{"startOffset":3400,"endOffset":3580,"count":0},{"startOffset":3635,"endOffset":3661,"count":0},{"startOffset":3717,"endOffset":3745,"count":0},{"startOffset":3802,"endOffset":3832,"count":0},{"startOffset":3890,"endOffset":3922,"count":0},{"startOffset":3978,"endOffset":4006,"count":0},{"startOffset":4066,"endOffset":4102,"count":0},{"startOffset":4137,"endOffset":4174,"count":0},{"startOffset":4179,"endOffset":4223,"count":0},{"startOffset":4291,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4326,"endOffset":4440,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5622,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5847,"endOffset":6115,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6196,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6385,"endOffset":6507,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6527,"endOffset":6618,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6655,"endOffset":6791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":2}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53085,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1894,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2925,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3859,"endOffset":4090,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3937,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4080,"count":18},{"startOffset":4019,"endOffset":4039,"count":6},{"startOffset":4039,"endOffset":4073,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6309,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6406,"endOffset":6579,"count":2},{"startOffset":6437,"endOffset":6520,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6662,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6769,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7081,"endOffset":7171,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7178,"endOffset":7351,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7427,"endOffset":7519,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7526,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7777,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7889,"endOffset":8165,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8183,"endOffset":10228,"count":2},{"startOffset":8590,"endOffset":8618,"count":0},{"startOffset":8684,"endOffset":8712,"count":0},{"startOffset":8965,"endOffset":9002,"count":0},{"startOffset":9355,"endOffset":9385,"count":0},{"startOffset":9670,"endOffset":9699,"count":0},{"startOffset":9700,"endOffset":9730,"count":0},{"startOffset":9781,"endOffset":9944,"count":0},{"startOffset":10123,"endOffset":10225,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10274,"endOffset":10395,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10400,"endOffset":11476,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":11617,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11704,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11790,"endOffset":12053,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12288,"endOffset":12564,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":12663,"endOffset":12936,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12943,"endOffset":14042,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14046,"endOffset":14295,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14299,"endOffset":14641,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14645,"endOffset":16088,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16092,"endOffset":16713,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16717,"endOffset":17053,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":17057,"endOffset":18030,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18064,"endOffset":18222,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18289,"endOffset":18879,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18944,"endOffset":19310,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19427,"endOffset":19922,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":20022,"endOffset":24836,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":24841,"endOffset":25829,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":26035,"endOffset":26375,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":26379,"endOffset":27069,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":27428,"endOffset":27640,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27644,"endOffset":29508,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":29785,"endOffset":29853,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29884,"endOffset":34552,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34557,"endOffset":35254,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35288,"endOffset":36020,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":36150,"endOffset":37188,"count":3},{"startOffset":36286,"endOffset":36726,"count":0},{"startOffset":36755,"endOffset":37168,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37286,"endOffset":38012,"count":1},{"startOffset":37492,"endOffset":37886,"count":0},{"startOffset":37910,"endOffset":37945,"count":0},{"startOffset":37947,"endOffset":37992,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38118,"endOffset":38727,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":38732,"endOffset":39454,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39458,"endOffset":39549,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39707,"endOffset":40230,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":40235,"endOffset":40413,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":40417,"endOffset":40742,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":40773,"endOffset":41096,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":41101,"endOffset":41256,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":41445,"endOffset":42513,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42560,"endOffset":42614,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42649,"endOffset":42797,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42802,"endOffset":43059,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43063,"endOffset":44187,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44414,"endOffset":44811,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44818,"endOffset":44953,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45041,"endOffset":45107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45195,"endOffset":45409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45503,"endOffset":45571,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45658,"endOffset":45742,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45830,"endOffset":45892,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45904,"endOffset":46017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46099,"endOffset":46155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46241,"endOffset":46331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46415,"endOffset":46502,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46577,"endOffset":46663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46713,"endOffset":46799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46876,"endOffset":46965,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46972,"endOffset":47271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47352,"endOffset":47442,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47592,"endOffset":47639,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47725,"endOffset":47785,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47792,"endOffset":47960,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48277,"endOffset":50827,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":50831,"endOffset":51065,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":51069,"endOffset":51988,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":51992,"endOffset":52158,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":52178,"endOffset":52249,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52319,"endOffset":52487,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52510,"endOffset":52648,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52670,"endOffset":52808,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52829,"endOffset":53082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":581,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":782,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1146,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1382,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":300,"endOffset":470,"count":4},{"startOffset":399,"endOffset":422,"count":0},{"startOffset":460,"endOffset":466,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":474,"endOffset":606,"count":3},{"startOffset":542,"endOffset":574,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":610,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":832,"endOffset":1277,"count":4},{"startOffset":981,"endOffset":1199,"count":1},{"startOffset":1026,"endOffset":1166,"count":0},{"startOffset":1199,"endOffset":1276,"count":3}],"isBlockCoverage":true}]},{"scriptId":"109","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":2},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":2}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4549,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34251,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2697,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3803,"endOffset":4034,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3881,"endOffset":3925,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3932,"endOffset":4024,"count":20},{"startOffset":3963,"endOffset":3983,"count":2},{"startOffset":3983,"endOffset":4017,"count":18}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7077,"endOffset":7155,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7162,"endOffset":7335,"count":2},{"startOffset":7193,"endOffset":7276,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7411,"endOffset":7511,"count":6},{"startOffset":7462,"endOffset":7496,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7518,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7883,"endOffset":7983,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7990,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8375,"endOffset":8452,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8459,"endOffset":8632,"count":1},{"startOffset":8573,"endOffset":8625,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8827,"endOffset":8927,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8934,"endOffset":9140,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9216,"endOffset":9294,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9301,"endOffset":9475,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9493,"endOffset":11852,"count":2},{"startOffset":9776,"endOffset":9804,"count":0},{"startOffset":9870,"endOffset":9898,"count":0},{"startOffset":10195,"endOffset":10232,"count":0},{"startOffset":10288,"endOffset":10319,"count":0},{"startOffset":10583,"endOffset":10613,"count":0},{"startOffset":10875,"endOffset":10881,"count":0},{"startOffset":10914,"endOffset":10943,"count":0},{"startOffset":10944,"endOffset":10974,"count":0},{"startOffset":11025,"endOffset":11239,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11856,"endOffset":12025,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12065,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12296,"endOffset":12409,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12461,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12660,"endOffset":13810,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13896,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14210,"endOffset":14280,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14285,"endOffset":15732,"count":1},{"startOffset":14421,"endOffset":14442,"count":0},{"startOffset":14468,"endOffset":14515,"count":0},{"startOffset":14658,"endOffset":14681,"count":0},{"startOffset":14689,"endOffset":14811,"count":0},{"startOffset":14903,"endOffset":14990,"count":0},{"startOffset":14997,"endOffset":15325,"count":0},{"startOffset":15385,"endOffset":15436,"count":0},{"startOffset":15482,"endOffset":15534,"count":0},{"startOffset":15549,"endOffset":15644,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15763,"endOffset":15961,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15992,"endOffset":16095,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":16128,"endOffset":16379,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16424,"endOffset":16757,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16952,"endOffset":18171,"count":1},{"startOffset":17070,"endOffset":17073,"count":0},{"startOffset":17208,"endOffset":17628,"count":0},{"startOffset":17944,"endOffset":17984,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18175,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":18629,"endOffset":19025,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19029,"endOffset":21697,"count":1},{"startOffset":19149,"endOffset":19226,"count":0},{"startOffset":19346,"endOffset":19351,"count":0},{"startOffset":19487,"endOffset":20121,"count":0},{"startOffset":20173,"endOffset":20216,"count":0},{"startOffset":20296,"endOffset":20317,"count":0},{"startOffset":20688,"endOffset":21049,"count":0},{"startOffset":21103,"endOffset":21165,"count":0},{"startOffset":21167,"endOffset":21227,"count":0},{"startOffset":21479,"endOffset":21627,"count":0},{"startOffset":21634,"endOffset":21689,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21701,"endOffset":21892,"count":1}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":21896,"endOffset":22425,"count":1},{"startOffset":22077,"endOffset":22098,"count":0},{"startOffset":22118,"endOffset":22186,"count":0},{"startOffset":22303,"endOffset":22334,"count":0},{"startOffset":22377,"endOffset":22422,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22500,"endOffset":23069,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23138,"endOffset":24860,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":24892,"endOffset":25067,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25135,"endOffset":26835,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":26840,"endOffset":27283,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":27287,"endOffset":27937,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":27941,"endOffset":28485,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":28489,"endOffset":29007,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29011,"endOffset":29676,"count":0}],"isBlockCoverage":false},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29680,"endOffset":30009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30098,"endOffset":30203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30256,"endOffset":30364,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30371,"endOffset":30627,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30679,"endOffset":31093,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31100,"endOffset":31239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31299,"endOffset":31420,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31482,"endOffset":31605,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31663,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31818,"endOffset":31937,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31998,"endOffset":32154,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32219,"endOffset":32319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32377,"endOffset":32473,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32531,"endOffset":32624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32699,"endOffset":32799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32863,"endOffset":33127,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33210,"endOffset":33500,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":33591,"endOffset":33625,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33678,"endOffset":33718,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33788,"endOffset":33956,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33979,"endOffset":34117,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34139,"endOffset":34248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7325,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7158,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7191,"endOffset":7322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10195,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2343,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2338,"count":1},{"startOffset":2247,"endOffset":2316,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2742,"endOffset":2755,"count":1}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2808,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2874,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2941,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":3004,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3070,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3124,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3180,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3234,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3288,"endOffset":3308,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3343,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3402,"endOffset":3426,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3462,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3515,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3679,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4079,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4563,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4635,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4690,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"platform.<computed>","ranges":[{"startOffset":4774,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4833,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5487,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5543,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5626,"endOffset":5643,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5735,"endOffset":5993,"count":22}],"isBlockCoverage":true},{"functionName":"getCIDR","ranges":[{"startOffset":5997,"endOffset":6985,"count":5},{"startOffset":6195,"endOffset":6259,"count":2},{"startOffset":6306,"endOffset":6948,"count":95},{"startOffset":6339,"endOffset":6424,"count":74},{"startOffset":6376,"endOffset":6405,"count":70},{"startOffset":6405,"endOffset":6424,"count":4},{"startOffset":6424,"endOffset":6530,"count":25},{"startOffset":6530,"endOffset":6943,"count":24},{"startOffset":6553,"endOffset":6627,"count":2},{"startOffset":6582,"endOffset":6618,"count":0},{"startOffset":6627,"endOffset":6936,"count":22},{"startOffset":6811,"endOffset":6927,"count":3},{"startOffset":6848,"endOffset":6888,"count":0}],"isBlockCoverage":true},{"functionName":"networkInterfaces","ranges":[{"startOffset":7209,"endOffset":7930,"count":1},{"startOffset":7337,"endOffset":7351,"count":0},{"startOffset":7396,"endOffset":7907,"count":5},{"startOffset":7722,"endOffset":7746,"count":2},{"startOffset":7825,"endOffset":7861,"count":2},{"startOffset":7861,"endOffset":7902,"count":3}],"isBlockCoverage":true},{"functionName":"setPriority","ranges":[{"startOffset":8021,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8387,"endOffset":8655,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8973,"endOffset":9277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/proc-log/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":379,"count":1},{"startOffset":290,"endOffset":324,"count":9}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":182,"endOffset":239,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":191,"endOffset":239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35695,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3418,"endOffset":3512,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3578,"endOffset":3663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3694,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":4035,"endOffset":4168,"count":7}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4172,"endOffset":10560,"count":2}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4317,"endOffset":4501,"count":2},{"startOffset":4434,"endOffset":4438,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4507,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4572,"endOffset":4610,"count":4}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4616,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4706,"endOffset":4764,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4770,"endOffset":4836,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4842,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4902,"endOffset":4948,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4954,"endOffset":5065,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":5071,"endOffset":5154,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":5160,"endOffset":5229,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5235,"endOffset":5383,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5389,"endOffset":5451,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5457,"endOffset":5523,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5529,"endOffset":5605,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5611,"endOffset":5724,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5730,"endOffset":5815,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5821,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5918,"endOffset":6741,"count":2},{"startOffset":5953,"endOffset":5993,"count":0},{"startOffset":6026,"endOffset":6069,"count":0},{"startOffset":6304,"endOffset":6676,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6244,"endOffset":6286,"count":2}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6391,"endOffset":6506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6509,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6748,"endOffset":6809,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":7014,"endOffset":8762,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9075,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9548,"endOffset":9705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9711,"endOffset":10126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10132,"endOffset":10187,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10193,"endOffset":10283,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10289,"endOffset":10324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10330,"endOffset":10557,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10564,"endOffset":10946,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10678,"endOffset":10737,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10724,"endOffset":10736,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10744,"endOffset":10936,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10950,"endOffset":11243,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":11247,"endOffset":11725,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11729,"endOffset":11852,"count":11},{"startOffset":11774,"endOffset":11783,"count":0},{"startOffset":11790,"endOffset":11849,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11856,"endOffset":13031,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":13035,"endOffset":15374,"count":2},{"startOffset":13629,"endOffset":13635,"count":0},{"startOffset":13663,"endOffset":13713,"count":0},{"startOffset":13749,"endOffset":13787,"count":0},{"startOffset":14041,"endOffset":14115,"count":0},{"startOffset":14305,"endOffset":14309,"count":0},{"startOffset":14398,"endOffset":14455,"count":0},{"startOffset":14552,"endOffset":14563,"count":0},{"startOffset":14622,"endOffset":14684,"count":0},{"startOffset":14709,"endOffset":14897,"count":0},{"startOffset":14976,"endOffset":15366,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15531,"endOffset":15777,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15781,"endOffset":16055,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":16059,"endOffset":16452,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16576,"endOffset":16974,"count":5},{"startOffset":16969,"endOffset":16973,"count":2}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16978,"endOffset":18473,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":18477,"endOffset":18853,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18857,"endOffset":20257,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":20261,"endOffset":20742,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20746,"endOffset":21132,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":21136,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21276,"endOffset":21523,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":21527,"endOffset":21733,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21737,"endOffset":22203,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22207,"endOffset":22382,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22386,"endOffset":22553,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22557,"endOffset":23122,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":23126,"endOffset":25221,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":25225,"endOffset":25755,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":25759,"endOffset":26082,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":26086,"endOffset":27420,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":27424,"endOffset":27683,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27687,"endOffset":28021,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":28025,"endOffset":28356,"count":6},{"startOffset":28314,"endOffset":28355,"count":2}],"isBlockCoverage":true},{"functionName":"statfs","ranges":[{"startOffset":28360,"endOffset":28698,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":28702,"endOffset":29105,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":29109,"endOffset":29334,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":29338,"endOffset":29558,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":29562,"endOffset":29836,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":29840,"endOffset":30074,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":30078,"endOffset":30419,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":30423,"endOffset":30708,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":30712,"endOffset":31051,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":31055,"endOffset":31402,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":31406,"endOffset":31693,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":31697,"endOffset":32049,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":32053,"endOffset":32343,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":32347,"endOffset":32824,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":32828,"endOffset":33733,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":33737,"endOffset":33853,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":33857,"endOffset":34103,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":34107,"endOffset":34462,"count":5},{"startOffset":34226,"endOffset":34232,"count":0},{"startOffset":34276,"endOffset":34313,"count":0},{"startOffset":34395,"endOffset":34461,"count":2}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":34466,"endOffset":35143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8415,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1224,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2070,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2121,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3994,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4265,"endOffset":4867,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4873,"endOffset":5886,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5892,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6615,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":7012,"endOffset":7287,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7478,"endOffset":8083,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":8087,"endOffset":8351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11649,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3759,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4019,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4402,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4877,"endOffset":5166,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5201,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5464,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7011,"endOffset":7954,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8177,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8312,"endOffset":8660,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8691,"endOffset":8763,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8796,"endOffset":8870,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8875,"endOffset":8929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9159,"endOffset":9195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9200,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9282,"endOffset":11507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7311,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":871,"endOffset":7251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40495,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3985,"endOffset":9683,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9931,"endOffset":10033,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":10037,"endOffset":10152,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10268,"endOffset":10321,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10421,"endOffset":10466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10472,"endOffset":10671,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10817,"endOffset":11079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11085,"endOffset":11404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11410,"endOffset":11661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11667,"endOffset":11756,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11762,"endOffset":11936,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11942,"endOffset":12145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12151,"endOffset":13363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13369,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14502,"endOffset":14681,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14768,"endOffset":14905,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":15003,"endOffset":15145,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15430,"endOffset":15596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15602,"endOffset":17381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17387,"endOffset":18080,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18086,"endOffset":18498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18504,"endOffset":20781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20787,"endOffset":21260,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21266,"endOffset":21530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21536,"endOffset":22030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22036,"endOffset":22531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22537,"endOffset":23319,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23325,"endOffset":23762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23768,"endOffset":24053,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24059,"endOffset":24323,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24329,"endOffset":24595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24601,"endOffset":24761,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24767,"endOffset":25461,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25467,"endOffset":25622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25628,"endOffset":25788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25794,"endOffset":25986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25992,"endOffset":26313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26319,"endOffset":26640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27084,"endOffset":27739,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27745,"endOffset":28474,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28552,"endOffset":29523,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29710,"endOffset":29883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30006,"endOffset":30586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30626,"endOffset":39164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39483,"endOffset":39874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12802,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":403,"endOffset":605,"count":4},{"startOffset":567,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":996,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1271,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2298,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12250,"endOffset":12679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1449,"count":1}],"isBlockCoverage":true},{"functionName":"validateSemver","ranges":[{"startOffset":204,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":398,"endOffset":518,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/umask.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":14,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":792,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":48,"endOffset":142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":59,"endOffset":305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9058,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":318,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2320,"endOffset":2522,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2528,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2577,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2987,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3294,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4182,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4903,"endOffset":9026,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":235,"count":1},{"startOffset":94,"endOffset":142,"count":0},{"startOffset":146,"endOffset":193,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":148,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":199,"endOffset":207,"count":43}],"isBlockCoverage":true}]},{"scriptId":"131","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":894,"count":1},{"startOffset":238,"endOffset":285,"count":0}],"isBlockCoverage":true}]},{"scriptId":"132","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8154,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":979,"endOffset":1197,"count":43},{"startOffset":1045,"endOffset":1178,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1221,"endOffset":1505,"count":43},{"startOffset":1420,"endOffset":1425,"count":5},{"startOffset":1426,"endOffset":1437,"count":38},{"startOffset":1484,"endOffset":1489,"count":5},{"startOffset":1490,"endOffset":1501,"count":38}],"isBlockCoverage":true}]},{"scriptId":"133","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":339,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":156,"endOffset":306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":433,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":55,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":325,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/nerf-dart.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":262,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/env-replace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":129,"endOffset":426,"count":221}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160,"endOffset":425,"count":1},{"startOffset":234,"endOffset":249,"count":0},{"startOffset":325,"endOffset":376,"count":0}],"isBlockCoverage":true}]},{"scriptId":"137","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/parse-field.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2315,"count":1}],"isBlockCoverage":true},{"functionName":"parseField","ranges":[{"startOffset":269,"endOffset":2282,"count":169},{"startOffset":339,"endOffset":359,"count":114},{"startOffset":361,"endOffset":381,"count":108},{"startOffset":381,"endOffset":677,"count":61},{"startOffset":677,"endOffset":714,"count":49},{"startOffset":854,"endOffset":876,"count":60},{"startOffset":955,"endOffset":1038,"count":6},{"startOffset":977,"endOffset":980,"count":0},{"startOffset":1038,"endOffset":1286,"count":55},{"startOffset":1286,"endOffset":1343,"count":1},{"startOffset":1343,"endOffset":1409,"count":54},{"startOffset":1409,"endOffset":1421,"count":0},{"startOffset":1422,"endOffset":1433,"count":0},{"startOffset":1435,"endOffset":1458,"count":0},{"startOffset":1458,"endOffset":1577,"count":54},{"startOffset":1577,"endOffset":1587,"count":15},{"startOffset":1588,"endOffset":1600,"count":15},{"startOffset":1602,"endOffset":1773,"count":15},{"startOffset":1629,"endOffset":1653,"count":0},{"startOffset":1661,"endOffset":1687,"count":0},{"startOffset":1695,"endOffset":1719,"count":0},{"startOffset":1727,"endOffset":1761,"count":0},{"startOffset":1773,"endOffset":1819,"count":54},{"startOffset":1819,"endOffset":1849,"count":0},{"startOffset":1849,"endOffset":1867,"count":54},{"startOffset":1867,"endOffset":2062,"count":12},{"startOffset":1929,"endOffset":1937,"count":0},{"startOffset":1967,"endOffset":1974,"count":3},{"startOffset":1976,"endOffset":2021,"count":3},{"startOffset":2021,"endOffset":2057,"count":9},{"startOffset":2062,"endOffset":2081,"count":54},{"startOffset":2081,"endOffset":2214,"count":0},{"startOffset":2214,"endOffset":2233,"count":54},{"startOffset":2233,"endOffset":2245,"count":0},{"startOffset":2247,"endOffset":2265,"count":0},{"startOffset":2265,"endOffset":2281,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":989,"endOffset":1032,"count":1}],"isBlockCoverage":true}]},{"scriptId":"138","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/set-envs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3573,"count":1}],"isBlockCoverage":true},{"functionName":"envKey","ranges":[{"startOffset":382,"endOffset":535,"count":2}],"isBlockCoverage":true},{"functionName":"envVal","ranges":[{"startOffset":554,"endOffset":732,"count":5},{"startOffset":580,"endOffset":618,"count":1},{"startOffset":622,"endOffset":732,"count":4},{"startOffset":675,"endOffset":679,"count":0},{"startOffset":709,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":604,"count":1}],"isBlockCoverage":true},{"functionName":"sameConfigValue","ranges":[{"startOffset":760,"endOffset":863,"count":263},{"startOffset":797,"endOffset":819,"count":9},{"startOffset":820,"endOffset":833,"count":255},{"startOffset":837,"endOffset":863,"count":8}],"isBlockCoverage":true},{"functionName":"sameArrayValue","ranges":[{"startOffset":890,"endOffset":1302,"count":8},{"startOffset":940,"endOffset":964,"count":0},{"startOffset":1007,"endOffset":1284,"count":0}],"isBlockCoverage":true},{"functionName":"setEnv","ranges":[{"startOffset":1321,"endOffset":1470,"count":2}],"isBlockCoverage":true},{"functionName":"setEnvs","ranges":[{"startOffset":1490,"endOffset":3543,"count":1},{"startOffset":2245,"endOffset":2943,"count":159},{"startOffset":2310,"endOffset":2315,"count":4},{"startOffset":2336,"endOffset":2358,"count":141},{"startOffset":2360,"endOffset":2384,"count":22},{"startOffset":2384,"endOffset":2442,"count":137},{"startOffset":2442,"endOffset":2694,"count":126},{"startOffset":2637,"endOffset":2687,"count":0},{"startOffset":2694,"endOffset":2938,"count":11},{"startOffset":2859,"endOffset":2878,"count":9},{"startOffset":2881,"endOffset":2931,"count":2},{"startOffset":3396,"endOffset":3450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"139","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2148,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":518,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"Object.entries.reduce.shorthands","ranges":[{"startOffset":877,"endOffset":1097,"count":155},{"startOffset":1001,"endOffset":1049,"count":22}],"isBlockCoverage":true}]},{"scriptId":"140","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definitions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75608,"count":1},{"startOffset":1268,"endOffset":1292,"count":0},{"startOffset":1293,"endOffset":1360,"count":0},{"startOffset":1410,"endOffset":1418,"count":0},{"startOffset":1422,"endOffset":1449,"count":0},{"startOffset":1994,"endOffset":2000,"count":0},{"startOffset":2045,"endOffset":2053,"count":0},{"startOffset":13911,"endOffset":13942,"count":0},{"startOffset":43546,"endOffset":43555,"count":0},{"startOffset":72259,"endOffset":72266,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadFile","ranges":[{"startOffset":320,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"buildOmitList","ranges":[{"startOffset":505,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalAddresses","ranges":[{"startOffset":1524,"endOffset":1741,"count":1},{"startOffset":1703,"endOffset":1738,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1600,"endOffset":1640,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1615,"endOffset":1639,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1655,"endOffset":1688,"count":3}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":2504,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":6492,"endOffset":6590,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":10222,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":10715,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":11135,"endOffset":11257,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":11610,"endOffset":12045,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":14319,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":15788,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":16139,"endOffset":16237,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":20330,"endOffset":20465,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":20698,"endOffset":20832,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21125,"endOffset":21263,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21558,"endOffset":21696,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21970,"endOffset":22048,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":25849,"endOffset":26005,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":26802,"endOffset":26968,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":29139,"endOffset":29303,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":36074,"endOffset":36238,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":38742,"endOffset":38982,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":40175,"endOffset":40282,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":40843,"endOffset":40933,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":41924,"endOffset":42005,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":42971,"endOffset":43164,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":44329,"endOffset":44414,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":45176,"endOffset":45274,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":45679,"endOffset":45777,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":46488,"endOffset":46682,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":47241,"endOffset":47405,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":47999,"endOffset":48163,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":50578,"endOffset":50676,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":51085,"endOffset":51242,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":54634,"endOffset":54995,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":55217,"endOffset":55441,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":55734,"endOffset":55928,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":56172,"endOffset":56711,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":56918,"endOffset":57457,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":57993,"endOffset":58160,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":58685,"endOffset":58911,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":60570,"endOffset":60856,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61212,"endOffset":61307,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61505,"endOffset":61668,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61895,"endOffset":62031,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":62221,"endOffset":62386,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":62647,"endOffset":62798,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":63328,"endOffset":63489,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":65479,"endOffset":65559,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":66089,"endOffset":66170,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":69976,"endOffset":71119,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":73628,"endOffset":73736,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":74511,"endOffset":75022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6925,"count":1}],"isBlockCoverage":true},{"functionName":"Definition","ranges":[{"startOffset":748,"endOffset":1426,"count":155},{"startOffset":978,"endOffset":1047,"count":131},{"startOffset":1080,"endOffset":1142,"count":154},{"startOffset":1213,"endOffset":1350,"count":138},{"startOffset":1248,"endOffset":1290,"count":12},{"startOffset":1290,"endOffset":1343,"count":126},{"startOffset":1373,"endOffset":1421,"count":152}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1432,"endOffset":1890,"count":155},{"startOffset":1479,"endOffset":1620,"count":620},{"startOffset":1542,"endOffset":1613,"count":0},{"startOffset":1641,"endOffset":1705,"count":0},{"startOffset":1750,"endOffset":1885,"count":988},{"startOffset":1789,"endOffset":1878,"count":0}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":1965,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"describeUsage","ranges":[{"startOffset":2655,"endOffset":4205,"count":152},{"startOffset":2733,"endOffset":3044,"count":107},{"startOffset":2755,"endOffset":2793,"count":15},{"startOffset":2826,"endOffset":2850,"count":59},{"startOffset":2852,"endOffset":2897,"count":14},{"startOffset":2897,"endOffset":2945,"count":93},{"startOffset":2979,"endOffset":3021,"count":48},{"startOffset":3044,"endOffset":3089,"count":45},{"startOffset":3089,"endOffset":3135,"count":4},{"startOffset":3135,"endOffset":3523,"count":45},{"startOffset":3523,"endOffset":3545,"count":5},{"startOffset":3545,"endOffset":3615,"count":40},{"startOffset":3615,"endOffset":3723,"count":13},{"startOffset":3723,"endOffset":3796,"count":27},{"startOffset":3796,"endOffset":3812,"count":40},{"startOffset":3812,"endOffset":4067,"count":1},{"startOffset":4067,"endOffset":4128,"count":40},{"startOffset":4128,"endOffset":4172,"count":8},{"startOffset":4172,"endOffset":4202,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3450,"endOffset":3497,"count":128},{"startOffset":3466,"endOffset":3480,"count":98},{"startOffset":3481,"endOffset":3497,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3586,"endOffset":3612,"count":78}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3698,"endOffset":3704,"count":46}],"isBlockCoverage":true},{"functionName":"describeType","ranges":[{"startOffset":4230,"endOffset":5519,"count":270},{"startOffset":4268,"endOffset":4873,"count":45},{"startOffset":4592,"endOffset":4614,"count":41},{"startOffset":4615,"endOffset":4619,"count":4},{"startOffset":4664,"endOffset":4673,"count":14},{"startOffset":4674,"endOffset":4682,"count":31},{"startOffset":4797,"endOffset":4829,"count":8},{"startOffset":4830,"endOffset":4834,"count":37},{"startOffset":4873,"endOffset":5104,"count":225},{"startOffset":5104,"endOffset":5139,"count":41},{"startOffset":5145,"endOffset":5180,"count":15},{"startOffset":5186,"endOffset":5263,"count":1},{"startOffset":5269,"endOffset":5306,"count":68},{"startOffset":5312,"endOffset":5343,"count":1},{"startOffset":5349,"endOffset":5380,"count":9},{"startOffset":5386,"endOffset":5428,"count":2},{"startOffset":5434,"endOffset":5463,"count":5},{"startOffset":5469,"endOffset":5511,"count":83}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4308,"endOffset":4324,"count":124}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4330,"endOffset":4350,"count":116}],"isBlockCoverage":true},{"functionName":"describeValue","ranges":[{"startOffset":5610,"endOffset":5678,"count":214},{"startOffset":5642,"endOffset":5663,"count":83},{"startOffset":5664,"endOffset":5677,"count":131}],"isBlockCoverage":true},{"functionName":"unindent","ranges":[{"startOffset":5699,"endOffset":5928,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":5945,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAll","ranges":[{"startOffset":6294,"endOffset":6892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/ci-info/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2458,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181,"endOffset":223,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":292,"endOffset":1341,"count":50},{"startOffset":354,"endOffset":366,"count":2},{"startOffset":367,"endOffset":381,"count":48},{"startOffset":529,"endOffset":694,"count":0},{"startOffset":700,"endOffset":1239,"count":0},{"startOffset":1245,"endOffset":1333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":456,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1042,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"checkEnv","ranges":[{"startOffset":1894,"endOffset":2456,"count":50},{"startOffset":1974,"endOffset":1991,"count":45},{"startOffset":1991,"endOffset":2088,"count":5},{"startOffset":2088,"endOffset":2270,"count":1},{"startOffset":2270,"endOffset":2292,"count":4},{"startOffset":2292,"endOffset":2369,"count":1},{"startOffset":2369,"endOffset":2455,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2319,"endOffset":2363,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2403,"endOffset":2452,"count":3}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/read-package-json-fast/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3793,"count":1}],"isBlockCoverage":true},{"functionName":"rpj","ranges":[{"startOffset":259,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":365,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":423,"count":0}],"isBlockCoverage":false},{"functionName":"readBinDir","ranges":[{"startOffset":501,"endOffset":948,"count":1},{"startOffset":542,"endOffset":565,"count":0},{"startOffset":598,"endOffset":621,"count":0},{"startOffset":632,"endOffset":656,"count":0},{"startOffset":681,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"walkBinDir","ranges":[{"startOffset":971,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"stripUnderscores","ranges":[{"startOffset":1614,"endOffset":1736,"count":1},{"startOffset":1690,"endOffset":1718,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1670,"endOffset":1687,"count":8}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":1758,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"addId","ranges":[{"startOffset":1968,"endOffset":2083,"count":1}],"isBlockCoverage":true},{"functionName":"pruneRepeatedOptionals","ranges":[{"startOffset":2400,"endOffset":2696,"count":1},{"startOffset":2498,"endOffset":2523,"count":0},{"startOffset":2525,"endOffset":2604,"count":0}],"isBlockCoverage":true},{"functionName":"fixBundled","ranges":[{"startOffset":2719,"endOffset":3304,"count":1},{"startOffset":2832,"endOffset":2857,"count":0},{"startOffset":2881,"endOffset":2921,"count":0},{"startOffset":2944,"endOffset":3018,"count":0},{"startOffset":3031,"endOffset":3056,"count":0},{"startOffset":3058,"endOffset":3201,"count":0}],"isBlockCoverage":true},{"functionName":"fixScripts","ranges":[{"startOffset":3327,"endOffset":3611,"count":1},{"startOffset":3395,"endOffset":3443,"count":0},{"startOffset":3547,"endOffset":3588,"count":0}],"isBlockCoverage":true},{"functionName":"fixFunding","ranges":[{"startOffset":3634,"endOffset":3767,"count":1},{"startOffset":3664,"endOffset":3699,"count":0},{"startOffset":3701,"endOffset":3749,"count":0}],"isBlockCoverage":true}]},{"scriptId":"144","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/json-parse-even-better-errors/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4240,"count":1}],"isBlockCoverage":true},{"functionName":"hexify","ranges":[{"startOffset":716,"endOffset":834,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":1033,"endOffset":1070,"count":1}],"isBlockCoverage":true},{"functionName":"makeParsedError","ranges":[{"startOffset":1098,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":1219,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParseError","ranges":[{"startOffset":2306,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":2592,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"set name","ranges":[{"startOffset":2650,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"parseJson","ranges":[{"startOffset":2764,"endOffset":3498,"count":1},{"startOffset":3356,"endOffset":3373,"count":0},{"startOffset":3406,"endOffset":3424,"count":0},{"startOffset":3456,"endOffset":3473,"count":0}],"isBlockCoverage":true},{"functionName":"parseJsonError","ranges":[{"startOffset":3525,"endOffset":4006,"count":1},{"startOffset":3633,"endOffset":4003,"count":0}],"isBlockCoverage":true},{"functionName":"parseJsonError.noExceptions","ranges":[{"startOffset":4121,"endOffset":4238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/npm-normalize-package-bin/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1410,"count":1}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":170,"endOffset":387,"count":1},{"startOffset":209,"endOffset":387,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":415,"endOffset":546,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArray","ranges":[{"startOffset":573,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"removeBin","ranges":[{"startOffset":731,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeObject","ranges":[{"startOffset":802,"endOffset":1378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/map-workspaces/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7070,"count":1}],"isBlockCoverage":true},{"functionName":"appendNegatedPatterns","ranges":[{"startOffset":212,"endOffset":1891,"count":1},{"startOffset":348,"endOffset":1550,"count":0},{"startOffset":1717,"endOffset":1848,"count":0}],"isBlockCoverage":true},{"functionName":"getPatterns","ranges":[{"startOffset":1895,"endOffset":2285,"count":1},{"startOffset":2011,"endOffset":2032,"count":0},{"startOffset":2101,"endOffset":2225,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageName","ranges":[{"startOffset":2289,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"pkgPathmame","ranges":[{"startOffset":2397,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobPattern","ranges":[{"startOffset":2614,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"getError","ranges":[{"startOffset":2765,"endOffset":2878,"count":0}],"isBlockCoverage":false},{"functionName":"reverseResultMap","ranges":[{"startOffset":2882,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"mapWorkspaces","ranges":[{"startOffset":2981,"endOffset":5436,"count":1},{"startOffset":3051,"endOffset":3171,"count":0},{"startOffset":3414,"endOffset":5435,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobOpts","ranges":[{"startOffset":3440,"endOffset":3649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3743,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3843,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4090,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"addDuplicateErrorMessages","ranges":[{"startOffset":5440,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"mapWorkspaces.virtual","ranges":[{"startOffset":5773,"endOffset":7034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/name-from-folder/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":65,"endOffset":139,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":160,"endOffset":230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41548,"count":1},{"startOffset":3340,"endOffset":3349,"count":0},{"startOffset":3507,"endOffset":3523,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":740,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1188,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1270,"endOffset":1301,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1333,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1483,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1640,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1714,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1816,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1912,"endOffset":1955,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1978,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2098,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2325,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2549,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2703,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2859,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2990,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4209,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4371,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4429,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6417,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":7593,"endOffset":7660,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7747,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":8145,"endOffset":8197,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8200,"endOffset":40787,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40944,"endOffset":40980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41095,"endOffset":41137,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41258,"endOffset":41304,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5191,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":308,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":424,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":671,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1076,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1571,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2167,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2222,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2281,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2324,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2369,"endOffset":5187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":43,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":387,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":504,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":183,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23412,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":323,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1111,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1572,"endOffset":23359,"count":0}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1024,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1124,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1264,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1656,"endOffset":5832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":711,"endOffset":927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":565,"endOffset":926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2927,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":514,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":672,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":814,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":952,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1059,"endOffset":1175,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1221,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1901,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2017,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2170,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2331,"endOffset":2378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8471,"count":1},{"startOffset":554,"endOffset":563,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":632,"endOffset":8415,"count":0}],"isBlockCoverage":true}]},{"scriptId":"158","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68057,"count":1},{"startOffset":415,"endOffset":499,"count":0},{"startOffset":678,"endOffset":722,"count":0},{"startOffset":67610,"endOffset":67621,"count":0},{"startOffset":67935,"endOffset":68021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89,"endOffset":413,"count":104},{"startOffset":236,"endOffset":251,"count":8},{"startOffset":252,"endOffset":288,"count":96},{"startOffset":268,"endOffset":288,"count":5},{"startOffset":291,"endOffset":369,"count":99}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":332,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":418,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":583,"endOffset":676,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":680,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":776,"endOffset":1062,"count":1},{"startOffset":825,"endOffset":836,"count":0},{"startOffset":900,"endOffset":1001,"count":104}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2243,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":2620,"endOffset":2695,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3851,"endOffset":4284,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4373,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":4603,"endOffset":4784,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":4933,"endOffset":4985,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":5932,"endOffset":6108,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6776,"endOffset":39243,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":39452,"endOffset":41392,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41520,"endOffset":42477,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":42844,"endOffset":64499,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64727,"endOffset":65877,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":66147,"endOffset":66889,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":67209,"endOffset":67344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52432,"count":1},{"startOffset":273,"endOffset":279,"count":0},{"startOffset":400,"endOffset":404,"count":0},{"startOffset":763,"endOffset":2376,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":451,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":793,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1017,"endOffset":1544,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1658,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2419,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2496,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":3076,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":3465,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3541,"endOffset":4320,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3612,"endOffset":3640,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4717,"endOffset":52367,"count":0}],"isBlockCoverage":true}]},{"scriptId":"160","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"161","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7668,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1082,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1216,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1361,"endOffset":1527,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1533,"endOffset":1672,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1678,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1843,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2000,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2153,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2311,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2503,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2691,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2876,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3057,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3265,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3464,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3631,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3800,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3945,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4102,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4259,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4525,"endOffset":5491,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6388,"endOffset":6997,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7069,"endOffset":7587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6178,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6505,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1186,"endOffset":1652,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1708,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2468,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2582,"endOffset":2773,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3037,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3352,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3676,"endOffset":3887,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3891,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4041,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5677,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6128,"endOffset":6392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3676,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":762,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1461,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1682,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1905,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2351,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3129,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6561,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2824,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3094,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3327,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3624,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3729,"endOffset":4053,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4059,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4194,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6092,"endOffset":6266,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6150,"endOffset":6244,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6314,"endOffset":6457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8809,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1089,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1723,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1911,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2111,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2295,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2491,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2675,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2871,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":3057,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3249,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3453,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3663,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":4097,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4535,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4799,"endOffset":5006,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":5048,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5174,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5341,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5409,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5732,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5979,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6306,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6522,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6807,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6984,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":7053,"endOffset":7244,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":7290,"endOffset":7299,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":7304,"endOffset":7602,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7658,"endOffset":7667,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7672,"endOffset":7768,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7921,"endOffset":8623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1814,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minipass/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34763,"count":1},{"startOffset":382,"endOffset":438,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1057,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1443,"endOffset":1600,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2912,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2965,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2997,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3087,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3300,"endOffset":3351,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3446,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4183,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4292,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4497,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4547,"endOffset":4610,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4977,"endOffset":34698,"count":0}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7516,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":246,"endOffset":268,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":290,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":406,"endOffset":7451,"count":0}],"isBlockCoverage":true}]},{"scriptId":"173","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12681,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":420,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":681,"endOffset":10238,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10270,"endOffset":11481,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11517,"endOffset":12611,"count":0}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4388,"count":1},{"startOffset":544,"endOffset":553,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":609,"endOffset":4326,"count":0}],"isBlockCoverage":true}]},{"scriptId":"175","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11073,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":365,"endOffset":965,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1229,"endOffset":1696,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1839,"endOffset":2683,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2890,"endOffset":11002,"count":0}],"isBlockCoverage":true}]},{"scriptId":"176","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":763,"endOffset":1014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70353,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1729,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4311,"endOffset":4319,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4743,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4843,"endOffset":5242,"count":1},{"startOffset":5015,"endOffset":5037,"count":0},{"startOffset":5074,"endOffset":5241,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5248,"endOffset":5389,"count":3},{"startOffset":5344,"endOffset":5363,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5395,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5693,"endOffset":5799,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6037,"endOffset":6454,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6458,"endOffset":6535,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6539,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6662,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6771,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7472,"endOffset":8231,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8307,"endOffset":8932,"count":2},{"startOffset":8674,"endOffset":8924,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8936,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9548,"endOffset":14322,"count":2},{"startOffset":9609,"endOffset":9636,"count":0},{"startOffset":9665,"endOffset":9800,"count":0},{"startOffset":9870,"endOffset":10126,"count":0},{"startOffset":10189,"endOffset":10393,"count":0},{"startOffset":10974,"endOffset":11000,"count":0},{"startOffset":11419,"endOffset":12814,"count":1},{"startOffset":12073,"endOffset":12111,"count":0},{"startOffset":12191,"endOffset":12202,"count":0},{"startOffset":12386,"endOffset":12431,"count":0},{"startOffset":12904,"endOffset":12982,"count":0},{"startOffset":12983,"endOffset":13030,"count":0},{"startOffset":13032,"endOffset":13255,"count":0},{"startOffset":13806,"endOffset":14080,"count":1},{"startOffset":13840,"endOffset":14014,"count":0},{"startOffset":14046,"endOffset":14075,"count":0},{"startOffset":14106,"endOffset":14160,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14500,"endOffset":14635,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":14760,"endOffset":15402,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15407,"endOffset":15559,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15771,"endOffset":16299,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16386,"endOffset":16905,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16942,"endOffset":17334,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17373,"endOffset":18005,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18039,"endOffset":18085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18176,"endOffset":18222,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18307,"endOffset":18365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18483,"endOffset":18809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18904,"endOffset":18988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19081,"endOffset":19128,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":19140,"endOffset":19397,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":19492,"endOffset":19824,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19854,"endOffset":20014,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":20054,"endOffset":20418,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20448,"endOffset":20797,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20830,"endOffset":21020,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":21051,"endOffset":21243,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21294,"endOffset":21397,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21434,"endOffset":21589,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21624,"endOffset":23190,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23221,"endOffset":23324,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23361,"endOffset":23668,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23673,"endOffset":23862,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23891,"endOffset":23984,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":24019,"endOffset":24087,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":24121,"endOffset":24187,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24219,"endOffset":24281,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24321,"endOffset":24606,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24641,"endOffset":24708,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24741,"endOffset":24802,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24835,"endOffset":24900,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24943,"endOffset":24992,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":25030,"endOffset":25976,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":26010,"endOffset":26080,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":26113,"endOffset":26196,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26394,"endOffset":26500,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":26534,"endOffset":27497,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":27505,"endOffset":28322,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28328,"endOffset":30493,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30499,"endOffset":33533,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":33564,"endOffset":35220,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":35265,"endOffset":35426,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":35431,"endOffset":35586,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35590,"endOffset":39649,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39653,"endOffset":43867,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":43871,"endOffset":43932,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":43961,"endOffset":44159,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":44191,"endOffset":44395,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":44402,"endOffset":46150,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46154,"endOffset":46581,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":46585,"endOffset":47124,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47128,"endOffset":48485,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":48489,"endOffset":48997,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":49001,"endOffset":49446,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":49450,"endOffset":51115,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":51231,"endOffset":51296,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":51367,"endOffset":52875,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":52879,"endOffset":55307,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":55378,"endOffset":55442,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":55448,"endOffset":55567,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":55573,"endOffset":57203,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":57235,"endOffset":61600,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":61605,"endOffset":62164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62250,"endOffset":62295,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":62376,"endOffset":62681,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":62686,"endOffset":64654,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":64811,"endOffset":65599,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":65631,"endOffset":66559,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":66603,"endOffset":66728,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":66772,"endOffset":67171,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":67178,"endOffset":67264,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":67326,"endOffset":67498,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67727,"endOffset":67763,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":67768,"endOffset":67809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67894,"endOffset":67925,"count":19}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":67930,"endOffset":67966,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":68008,"endOffset":68256,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":68284,"endOffset":68389,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":68419,"endOffset":68525,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":68675,"endOffset":69364,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":69405,"endOffset":69653,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":69789,"endOffset":69894,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":69899,"endOffset":70024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7452,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1246,"endOffset":2134,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":2138,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2858,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":3111,"endOffset":3773,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3777,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3992,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":4313,"endOffset":6320,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6324,"endOffset":7229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10199,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":793,"endOffset":1223,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":874,"endOffset":912,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":920,"endOffset":1040,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1046,"endOffset":1096,"count":2},{"startOffset":1083,"endOffset":1088,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1102,"endOffset":1158,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1164,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1227,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1441,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1821,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1877,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2305,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2485,"endOffset":2772,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2778,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2956,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3172,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3223,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3549,"endOffset":3901,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3927,"endOffset":4074,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4087,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4282,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4376,"endOffset":4415,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4421,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4523,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4568,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":4620,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4638,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4772,"endOffset":5047,"count":2},{"startOffset":4852,"endOffset":4867,"count":0},{"startOffset":4902,"endOffset":4929,"count":0},{"startOffset":4931,"endOffset":5013,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5051,"endOffset":5143,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5147,"endOffset":5243,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5247,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5486,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5636,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":6205,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6443,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6665,"endOffset":6823,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6829,"endOffset":7074,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7080,"endOffset":7611,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7617,"endOffset":8843,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8849,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9989,"endOffset":10079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":260,"endOffset":527,"count":2},{"startOffset":333,"endOffset":394,"count":0},{"startOffset":421,"endOffset":521,"count":1},{"startOffset":514,"endOffset":520,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":532,"endOffset":1126,"count":1},{"startOffset":703,"endOffset":707,"count":0},{"startOffset":764,"endOffset":768,"count":0},{"startOffset":825,"endOffset":829,"count":0},{"startOffset":887,"endOffset":891,"count":0},{"startOffset":946,"endOffset":950,"count":0},{"startOffset":1006,"endOffset":1010,"count":0},{"startOffset":1064,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"181","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5230,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1576,"endOffset":1685,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1689,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2333,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2568,"endOffset":3571,"count":1},{"startOffset":2639,"endOffset":2666,"count":0},{"startOffset":2705,"endOffset":2734,"count":0},{"startOffset":2820,"endOffset":2867,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3873,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4387,"endOffset":4530,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4568,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4754,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4939,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5118,"endOffset":5170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6722,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2629,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3265,"endOffset":6375,"count":1},{"startOffset":3472,"endOffset":3846,"count":0},{"startOffset":4195,"endOffset":4223,"count":0},{"startOffset":4747,"endOffset":4802,"count":0},{"startOffset":4809,"endOffset":5599,"count":0},{"startOffset":5605,"endOffset":5622,"count":0},{"startOffset":5628,"endOffset":5669,"count":0},{"startOffset":5675,"endOffset":5723,"count":0},{"startOffset":5728,"endOffset":5796,"count":0},{"startOffset":5798,"endOffset":6374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5068,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6158,"endOffset":6211,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6379,"endOffset":6662,"count":0}],"isBlockCoverage":false}]}],"timestamp":25692.570908,"source-map-cache":{"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js":{"lineLengths":[14,63,25,32,34,52,20,46,27,19,10,15,23,10,6,3,25,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,222,71,72,38,44,48,50,64,41,59,22,6,53,3,31,57,46,78,59,40,29,71,3,43,29,49,3,36,70,78,29,73,24,62,70,43,47,41,14,22,29,61,3,50,44,14,22,29,61,3,44,44,62,3,41,41,62,3,36,27,58,3,39,27,63,3,22,64,42,23,55,25,16,15,26,25,3,21,77,37,42,47,33,50,22,33,27,61,64,46,62,35,46,48,94,25,43,52,28,71,34,6,36,81,30,60,49,51,14,39,67,14,11,42,34,54,56,14,33,53,70,14,11,76,72,84,65,84,94,94,23,36,8,3,29,47,20,22,20,31,36,44,3,34,22,18,49,64,61,61,64,40,26,6,52,3,35,53,42,51,69,69,62,67,3,75,73,70,63,84,25,43,49,48,42,45,28,6,17,3,23,41,32,45,75,18,13,9,13,26,14,12,13,11,29,13,13,15,12,15,14,24,12,41,68,33,32,32,61,52,36,84,41,61,10,74,28,29,44,30,28,42,45,34,53,45,53,27,29,23,40,21,6,17,65,25,10,42,42,46,33,14,10,22,6,20,13,38,38,54,63,33,20,10,24,31,20,10,45,28,33,57,29,62,10,48,72,43,71,61,49,11,76,77,75,72,56,50,28,53,61,54,45,35,63,43,55,29,88,18,36,76,18,14,48,12,39,63,61,52,30,56,39,35,35,52,48,46,32,18,14,10,44,6,62,63,62,65,44,28,66,39,57,64,52,47,22,18,14,10,56,38,69,62,63,10,43,64,58,10,15,59,67,10,26,6,45,43,40,25,64,28,48,25,18,32,46,18,14,26,12,6,55,34,40,50,50,54,32,18,37,82,35,36,22,18,32,28,20,54,12,6,34,37,44,10,34,13,34,48,49,61,40,54,64,34,49,45,44,29,22,18,40,42,61,41,33,18,14,51,24,64,41,66,41,45,29,18,14,32,50,6,46,35,36,54,22,7,69,69,71,58,7,87,40,43,33,7,74,68,38,34,13,34,95,43,29,68,34,54,65,31,22,76,56,36,56,22,46,45,46,39,34,30,37,38,31,38,39,34,22,41,65,41,50,38,43,26,18,52,53,65,44,58,68,38,53,49,48,33,26,22,44,46,65,45,37,22,18,55,28,68,45,70,45,76,60,59,48,44,33,22,18,14,32,26,6,43,59,51,57,7,64,56,39,57,61,108,30,30,40,35,14,10,50,6,45,20,20,25,24,49,35,60,22,22,14,78,36,22,14,78,36,22,14,38,25,64,34,35,34,29,36,22,22,14,38,25,64,34,35,34,29,36,22,22,14,19,30,14,10,71,42,48,6,20,27,20,38,28,30,80,30,28,10,26,56,30,6,52,46,60,56,24,47,38,69,76,31,30,88,42,34,34,35,43,97,48,37,37,38,50,46,65,71,70,60,61,39,37,54,22,42,48,22,18,14,10,69,77,56,38,52,10,57,61,106,41,33,30,39,37,53,34,31,30,14,33,42,57,24,58,31,31,31,25,66,73,42,71,46,19,52,33,32,51,37,36,54,52,50,51,29,33,33,49,67,46,64,43,75,44,44,48,49,74,42,22,33,18,68,34,46,86,74,85,80,42,37,22,27,59,74,49,50,77,80,35,26,64,80,30,22,18,39,84,38,31,39,83,37,37,22,18,37,30,14,39,61,66,21,41,31,55,14,19,33,56,14,22,30,10,61,61,52,59,61,64,61,66,38,50,73,38,65,29,25,10,30,60,62,36,28,10,30,57,65,62,37,53,34,10,15,38,37,10,29,6,20,69,6,21,68,38,21,30,37,28,23,64,67,15,29,43,61,10,54,39,30,46,43,30,40,45,10,50,39,30,42,39,30,36,38,10,55,75,10,51,36,10,79,50,56,69,10,19,6,15,50,32,60,37,11,65,66,52,30,27,33,32,10,38,43,19,26,29,32,60,43,59,79,58,71,44,21,30,42,43,55,38,18,45,38,45,43,34,16,35,40,40,75,28,18,42,75,74,22,27,41,22,18,47,67,18,54,79,50,18,16,69,11,24,72,76,72,37,57,44,57,25,39,14,63,34,10,21,36,33,10,29,28,6,20,60,70,55,51,44,33,10,60,51,44,10,15,35,10,6,39,46,55,26,28,26,10,26,29,10,36,25,10,38,41,30,41,10,54,39,47,67,68,44,48,30,46,83,42,25,68,34,14,10,47,36,27,61,35,14,63,23,42,33,18,37,14,10,68,39,34,26,10,28,6,27,58,6,2,31,22,36,104,42,113,46,119,21,38,41,47,53,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js":{"lineLengths":[14,63,37,38,42,39,48,6,47,52,6,3,49,48],"data":null,"url":"assert-valid-pattern.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js":{"lineLengths":[14,31,63,22,66,48,50,43,66,65,43,72,54,30,72,70,70,45,59,39,47,75,33,22,33,27,75,39,34,74,60,12,10,11,15,20,17,13,18,11,25,14,15,55,44,23,46,26,43,18,35,31,63,77,66,53,35,75,6,21,30,42,35,29,39,39,26,38,48,10,81,31,6,32,17,42,35,26,80,10,15,37,84,10,6,18,30,33,57,30,25,29,49,25,33,15,41,32,26,82,23,32,25,90,51,46,56,77,26,45,51,22,18,24,32,14,10,21,6,21,33,26,26,34,86,55,14,33,33,10,6,15,39,85,64,42,29,28,36,75,26,10,20,6,16,33,25,59,38,26,37,25,82,32,54,36,59,30,14,10,21,6,14,33,25,40,25,36,26,24,42,51,30,66,29,45,6,19,38,29,13,41,6,20,46,39,25,10,18,6,43,30,29,29,30,33,66,25,26,37,43,76,43,46,42,30,30,18,31,48,54,45,26,22,81,41,22,30,30,18,38,36,36,38,30,30,18,79,35,30,49,57,35,30,18,26,14,27,22,10,49,32,25,39,26,22,33,39,72,39,42,38,26,26,14,27,44,50,41,22,18,77,37,18,26,26,14,34,32,32,34,26,26,14,61,32,26,46,32,53,26,14,29,32,26,34,43,26,14,29,61,42,18,32,26,42,26,14,22,10,30,75,42,25,35,47,18,6,45,55,49,20,6,73,22,20,41,30,33,45,29,38,67,72,76,47,37,30,37,50,60,25,25,10,78,61,22,25,12,6,20,30,6,74,74,78,75,74,77,73,63,7,44,33,61,44,51,15,33,17,7,72,29,54,35,67,44,51,15,53,22,7,79,80,80,20,7,77,65,70,33,67,50,57,7,76,69,7,75,42,7,79,80,7,23,52,49,76,7,82,79,75,43,7,78,73,47,7,32,75,74,76,31,53,33,30,26,60,36,28,71,65,50,61,52,27,15,27,28,34,58,84,68,85,68,101,43,53,79,45,43,80,59,75,81,77,82,84,69,87,93,22,18,14,74,26,32,42,46,35,14,45,21,23,50,53,29,15,10,74,74,45,65,32,63,45,76,80,40,39,31,30,40,84,10,44,73,17,41,39,33,10,30,57,10,63,24,51,78,10,15,44,68,27,82,31,28,36,26,40,31,62,34,66,39,51,42,10,17,19,47,49,25,11,6,26,27,24,60,34,41,65,14,33,78,69,48,23,11,67,24,6,57,30,21,27,48,38,28,34,59,26,14,30,45,34,18,23,37,18,26,14,29,107,32,31,48,39,50,30,18,14,29,45,39,21,32,33,26,14,29,29,33,26,14,35,10,75,6,2,19,31],"data":null,"url":"ast.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js":{"lineLengths":[14,73,41,63,29,63,23,49,42,51,39,36,36,47,36,35,35,50,36,55,40,3,64,20,59,38,75,61,52,64,67,68,42,66,30,41,26,26,36,54,6,25,23,21,21,26,23,26,24,22,25,37,34,57,27,17,22,10,50,28,19,10,25,26,29,33,21,26,14,71,10,38,73,80,47,68,38,71,22,37,29,41,25,43,40,36,18,14,10,57,26,26,67,32,34,77,14,41,45,14,29,17,22,10,46,71,44,47,20,22,10,43,28,20,22,10,61,37,13,6,22,63,56,38,6,69,71,42,55,6,78,75,78,75,29,31,36,19,76,62,6,78,74,46,44,24,22,21,46,3,33,45],"data":null,"url":"brace-expressions.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js":{"lineLengths":[14,63,27,4,65,3,73,78,73,67,3,71,34,3,78,17,4,66,32,44,86,3,29,36],"data":null,"url":"unescape.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js":{"lineLengths":[14,63,25,4,50,3,74,76,75,76,74,4,64,61,65,59,32,42,45,3,25,34],"data":null,"url":"escape.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/index.js":{"lineLengths":[14,63,299,42,40,50,49,62,2,41,45,58,2,33,43,60,2,29,46,56,2,50,63,2,43,46,59,2,35,66,37,70,39,47,27,4,41,28,30,4,22,40,113,117,38,107,48,120,21,38,17,14,24,16,28,20,36,17,30,21,38,26,39,32,36,4,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAuBzC,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AALD,wCAKC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AALD,gCAKC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AALD,4BAKC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AALD,0CAKC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AALD,kCAKC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,qBAAqB;AACrB,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AACzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AAWjB,oBAAoB;AAEP,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\nexport type {\n  Path,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n  WalkOptions,\n  FSOption,\n} from 'path-scurry'\n\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/glob.js":{"lineLengths":[14,63,23,42,46,30,46,44,45,49,55,15,41,23,15,4,55,4,13,14,9,10,9,17,12,12,19,10,15,14,13,12,11,11,16,13,14,14,12,10,12,26,19,8,48,8,10,8,61,8,14,8,66,7,62,7,63,72,38,7,72,14,8,33,30,19,58,29,51,35,37,31,47,35,33,25,27,10,78,59,10,35,31,51,39,35,41,39,45,43,24,74,33,35,65,75,10,43,33,10,36,43,51,41,63,10,30,35,72,14,77,10,32,58,58,27,39,45,54,85,14,10,15,53,48,45,53,36,56,52,49,37,29,16,10,42,71,67,70,43,89,22,48,21,27,39,35,33,29,29,31,28,34,37,61,38,11,78,63,35,41,24,22,51,36,34,20,59,33,71,12,6,19,75,74,80,47,17,83,30,53,62,32,41,37,24,11,6,17,17,76,30,53,62,32,41,37,27,11,6,15,76,26,49,58,28,37,33,21,6,19,76,26,49,58,28,37,33,25,6,8,65,34,8,20,53,6,26,35,6,8,72,34,8,16,54,6,31,31,6,2,21,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js":{"lineLengths":[14,98,34,54,89,69,6,40,30,34,18,5,97,73,22,22,4,67,43,21,142,37,19,3,63,254,42,32,30,46,28,47,58,47,43,40,20,31,27,35,37,18,16,33,37,39,39,7,3,59,96,16,8,22,21,20,35,42,11,7,40,49,96,48,28,58,22,22,22,22,22,22,23,21,28,28,65,41,34,39,67,34,58,65,33,75,30,38,39,38,49,35,36,12,22,16,29,20,36,24,36,28,35,33,37,36,39,32,34,27,37,11,18,35,30,14,3,40,33,43,11,18,42,36,14,3,4,66,13,4,50,20,29,6,2,37,73,80,74,80,79,78,76,77,3,79,71,4,42,13,4,51,39,16,21,33,48,12,6,2,39,48,4,49,79,3,79,75,76,20,3,76,76,17,4,17,8,33,7,74,75,81,75,46,8,10,8,54,7,17,8,10,8,60,7,17,8,11,8,80,7,17,8,12,8,72,17,8,12,37,9,20,10,16,26,6,11,17,27,6,12,18,28,6,10,16,26,6,10,16,26,6,11,17,27,6,14,20,30,6,10,16,26,6,11,17,27,6,13,19,29,6,14,20,30,6,14,20,30,6,14,20,30,6,18,24,34,6,12,18,28,6,12,18,28,6,12,18,28,6,16,22,32,6,16,12,15,20,15,20,11,15,17,15,8,70,74,74,73,60,8,17,49,6,8,80,68,7,17,8,77,26,76,38,30,28,34,35,40,40,50,35,27,40,10,15,46,10,6,8,59,7,66,8,14,39,32,26,38,56,6,8,17,8,22,31,6,8,82,8,20,21,25,10,51,53,51,32,61,44,23,6,30,22,39,31,10,18,6,8,78,81,80,15,7,17,8,17,49,22,27,10,64,44,39,25,6,8,70,7,79,15,7,76,62,7,37,7,17,8,28,51,25,10,33,40,10,26,42,33,40,35,36,41,26,14,10,72,68,35,47,40,44,25,58,21,26,22,12,34,36,10,79,80,31,23,6,8,77,69,8,17,44,35,10,32,31,18,49,10,33,63,6,8,70,45,74,58,8,22,30,36,47,40,32,31,18,65,10,38,58,6,8,58,8,17,44,35,10,32,31,18,49,10,33,60,38,6,8,71,7,78,22,8,22,47,40,30,60,28,59,40,59,14,19,50,14,10,31,40,72,44,6,8,39,7,81,77,46,8,18,48,6,19,36,6,16,32,24,33,30,32,29,44,41,40,37,55,52,55,52,76,51,53,29,6,8,35,8,15,46,6,8,32,8,20,46,6,8,39,8,26,46,6,8,35,8,22,46,6,8,32,8,15,46,6,8,29,8,17,47,6,8,36,8,23,47,6,8,73,28,7,75,48,8,20,61,6,8,76,52,7,81,75,49,8,23,33,6,8,76,57,7,81,75,49,8,23,31,6,8,77,59,7,76,75,68,8,22,42,56,6,8,78,58,7,77,56,8,20,30,25,26,26,50,40,57,40,34,6,8,78,62,8,22,48,6,8,81,75,72,8,17,40,6,8,81,51,7,76,78,57,7,74,17,8,17,28,47,54,6,8,78,7,81,40,7,80,8,23,41,22,27,10,35,30,10,30,73,28,30,10,29,14,76,78,30,56,14,10,21,41,30,10,6,8,45,8,21,41,22,27,10,35,30,10,30,73,28,30,10,29,14,65,76,30,56,14,10,21,41,30,10,6,32,46,38,61,71,35,19,33,10,6,20,38,33,20,59,36,6,28,57,42,34,36,29,10,6,25,35,29,6,64,21,66,67,67,47,30,34,20,29,28,63,55,34,31,34,36,6,30,61,54,33,10,38,32,10,15,45,10,6,28,71,30,34,58,35,30,10,38,33,32,10,6,31,30,28,31,27,70,55,78,30,33,10,26,73,63,30,49,40,10,29,6,29,56,45,6,32,62,35,69,41,68,36,10,26,25,22,6,38,57,33,37,42,37,46,26,14,63,10,6,43,26,60,59,64,26,29,70,72,39,40,25,17,36,26,10,25,18,6,8,79,19,7,79,72,75,7,80,82,17,7,76,16,8,20,43,18,81,29,14,25,42,14,10,6,8,42,8,18,43,18,70,29,14,25,42,14,10,6,21,158,29,33,37,41,33,31,29,33,25,25,25,27,29,33,29,27,27,25,36,52,72,68,35,10,6,23,32,33,41,47,38,47,6,8,80,7,80,20,7,76,16,7,77,77,64,82,77,75,8,40,34,28,30,17,52,20,10,42,36,63,28,29,17,51,20,10,58,36,39,20,10,40,53,55,42,79,22,44,42,14,19,69,29,43,56,18,48,14,76,20,12,6,27,8,47,7,80,20,7,76,16,8,22,34,23,10,42,36,60,10,53,55,42,42,46,10,15,34,37,33,78,18,76,41,22,56,18,48,14,25,44,42,14,52,23,10,56,6,8,44,8,20,34,23,10,42,36,60,10,53,55,42,14,61,37,18,52,14,44,10,21,40,38,10,56,6,19,35,26,40,76,30,71,26,10,29,21,6,35,50,40,31,48,6,8,64,23,7,75,7,80,42,8,23,28,35,63,30,14,74,56,10,20,37,10,6,8,36,8,21,28,35,63,30,14,63,56,10,20,37,10,6,8,67,42,7,17,8,25,29,20,37,21,22,32,28,45,45,26,27,10,45,20,51,37,42,26,10,6,2,29,4,36,3,80,44,4,35,8,46,8,16,8,43,8,26,8,80,68,7,17,8,77,64,6,8,17,8,48,106,6,8,17,8,26,46,6,8,17,8,24,55,43,30,10,71,68,52,54,14,10,48,82,6,8,17,8,51,68,78,34,28,27,34,46,37,6,2,31,4,41,3,37,4,35,8,42,8,20,8,45,8,15,8,80,68,7,17,8,77,64,6,8,17,8,26,48,6,8,17,8,25,26,6,8,17,8,48,106,6,2,31,4,79,41,3,79,78,37,4,23,8,76,8,10,8,79,8,14,8,69,8,11,8,84,8,9,19,24,15,8,52,7,69,8,12,9,8,55,7,77,7,17,8,119,37,63,49,10,62,56,47,42,53,49,54,63,74,71,47,25,10,30,36,87,10,29,30,44,47,30,36,38,33,30,36,29,38,65,66,69,16,29,10,25,6,8,60,8,29,40,43,10,29,6,8,76,54,7,17,8,22,31,6,8,61,7,50,7,79,72,18,8,24,72,73,20,54,32,33,26,37,38,23,14,10,50,36,27,10,55,43,23,6,8,72,73,63,7,50,7,79,72,18,8,29,72,73,20,54,32,33,26,37,38,23,14,10,55,36,27,10,60,48,23,6,8,80,8,33,41,45,10,33,6,8,74,62,8,38,41,45,10,38,6,8,66,8,33,41,45,10,27,6,8,65,8,32,41,45,10,51,6,45,29,9,41,45,10,49,26,30,10,40,35,23,10,15,45,59,10,6,43,29,9,41,45,10,49,26,30,10,47,35,23,10,34,40,10,15,57,10,6,8,71,43,7,79,72,75,7,80,82,17,7,76,16,8,36,41,45,10,30,6,8,48,8,34,41,45,10,34,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,46,41,45,10,49,26,30,10,84,28,40,68,10,32,36,27,45,38,26,35,18,37,42,26,33,37,39,30,22,19,43,48,72,22,56,37,73,98,22,27,62,43,26,31,36,26,22,18,37,11,29,43,32,38,24,36,37,30,16,12,6,44,41,45,10,49,26,30,10,84,28,40,68,10,39,34,47,39,44,68,18,27,42,61,34,39,39,18,54,33,18,14,10,24,6,8,31,7,48,7,76,81,77,8,31,31,6,46,77,82,82,41,45,10,49,29,30,10,68,6,8,64,7,52,8,26,35,6,48,41,45,10,49,26,30,10,84,40,60,10,39,34,47,39,44,60,18,27,42,61,34,39,39,18,54,33,18,14,10,6,42,41,45,10,49,26,30,10,84,71,40,69,10,32,31,28,32,32,30,43,28,42,39,28,18,30,31,75,42,28,58,41,51,45,51,54,48,48,83,30,26,47,94,36,26,22,47,59,84,47,30,26,22,34,47,59,62,43,26,22,54,56,22,38,35,22,19,37,33,48,30,14,11,19,24,6,46,41,45,10,49,26,30,10,84,71,32,40,69,10,31,28,32,32,30,43,28,42,39,28,18,30,31,51,43,48,80,43,26,22,18,30,43,31,46,65,38,43,43,22,58,39,22,18,14,44,48,11,19,24,6,29,33,77,36,6,2,41,4,52,3,76,39,4,47,8,45,8,16,50,40,61,30,50,36,10,6,8,17,8,25,81,74,59,59,6,8,17,8,18,118,6,8,67,8,20,87,6,2,43,4,82,3,77,3,44,4,47,8,45,8,15,50,41,60,30,6,8,17,8,26,20,6,8,17,8,18,118,6,8,67,8,20,34,6,2,43,4,69,3,73,12,3,44,4,49,50,40,41,6,2,45,4,69,3,74,4,69,4,75,3,75,66,4,50,22,36,27,27,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js":{"lineLengths":[14,4,20,4,63,27,48,19,42,18,12,26,22,75,22,47,46,51,54,3,37,33,22,33,17,29,17,23,16,25,34,36,10,7,17,33,24,30,10,27,24,37,24,25,41,25,40,25,53,28,14,43,10,7,83,35,37,20,40,79,68,72,76,82,82,134,7,2,21,48,29,74,22,41,71,72,72,73,56,28,57,45,11,28,21,33,26,37,30,49,32,28,21,32,24,21,22,6,2,14,10,12,27,34,25,43,22,23,36,43,37,18,6,32,30,36,76,10,29,38,25,6,14,38,6,12,41,6,2,4,62,3,65,73,71,78,26,4,17,76,77,41,10,14,14,19,18,8,40,8,9,8,50,8,19,8,49,8,18,8,51,8,20,8,51,8,20,8,47,8,16,8,51,8,20,8,48,8,17,8,49,8,18,8,52,8,21,8,61,8,30,8,55,8,24,8,59,8,28,8,63,8,32,8,53,8,22,27,11,21,13,14,14,11,11,11,11,11,15,12,13,11,17,21,22,8,62,66,66,7,46,7,17,8,38,17,26,31,27,29,31,33,33,27,27,25,32,15,25,32,15,27,23,63,109,57,55,57,51,11,6,35,8,52,8,16,26,6,8,56,8,20,30,6,8,65,8,27,37,6,8,59,8,17,27,6,8,60,8,24,34,6,8,56,8,20,30,6,8,61,8,25,35,6,27,349,43,77,10,59,26,58,10,25,33,59,48,36,56,107,14,62,76,14,10,41,49,80,10,41,46,34,56,56,41,41,24,24,40,24,34,45,37,10,50,47,33,10,15,44,40,10,44,54,48,42,68,72,64,52,58,39,39,48,92,18,14,48,93,14,44,10,40,56,48,48,29,59,32,21,44,29,24,39,84,14,43,10,52,72,85,10,66,48,36,34,87,63,75,14,10,6,8,59,8,27,53,6,31,47,49,27,31,65,51,31,50,45,48,59,22,29,58,38,31,31,18,37,14,11,41,64,11,47,31,41,45,37,36,28,34,38,52,48,49,14,11,67,40,27,31,34,42,31,81,50,38,31,31,18,37,14,22,11,40,49,39,26,14,37,41,34,33,14,57,30,11,35,37,35,66,11,6,56,32,28,29,25,28,32,48,34,29,42,50,30,11,63,56,67,46,26,14,35,39,65,83,22,50,43,105,22,18,23,92,83,49,18,14,25,11,55,33,33,62,57,39,18,14,50,26,41,67,14,11,6,33,41,56,39,101,10,18,7,55,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,56,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,27,39,63,6,8,57,64,8,17,43,50,50,62,60,14,10,6,8,57,7,57,64,8,18,44,50,50,62,60,14,10,6,8,58,64,8,14,43,40,35,62,25,14,10,6,8,54,7,58,64,8,15,44,40,35,62,25,14,10,6,8,60,64,8,16,43,40,35,62,40,14,10,6,8,56,7,60,64,8,17,44,40,35,62,40,14,10,6,8,66,32,8,26,31,6,8,99,64,8,39,8,77,72,8,32,43,40,53,41,21,37,26,53,63,14,10,6,8,75,67,70,43,8,32,43,40,53,41,21,37,26,59,10,6,8,75,79,8,33,44,40,53,41,21,37,26,59,10,6,8,71,24,8,19,29,64,36,47,32,14,10,24,6,8,78,75,78,64,8,16,41,29,30,36,49,37,17,33,30,33,42,39,43,32,59,36,42,14,10,27,41,10,22,6,8,76,30,8,13,24,63,42,40,53,41,21,58,26,37,46,43,74,77,58,60,14,31,45,14,39,10,20,6,8,77,74,49,8,16,22,42,31,76,78,78,32,19,77,54,48,14,47,10,6,8,33,7,74,31,8,33,31,28,25,10,141,61,85,54,54,61,26,37,52,14,67,28,25,10,72,35,24,38,29,42,39,47,45,39,38,38,40,44,44,32,26,52,24,36,33,10,15,22,37,49,32,79,75,64,62,48,58,26,53,65,26,22,18,44,44,59,22,49,66,22,18,45,56,42,30,44,79,54,34,48,52,18,14,31,39,14,10,40,43,10,26,32,53,14,24,48,10,74,39,22,43,47,14,10,21,6,8,66,38,8,12,14,33,55,35,52,52,57,22,18,46,32,18,14,10,18,59,43,26,47,51,18,14,10,6,19,33,39,39,66,61,10,62,36,48,14,41,55,14,10,36,68,20,45,45,35,10,32,41,35,10,15,43,10,32,22,21,6,8,76,77,21,7,39,59,8,30,77,43,35,44,46,56,30,14,41,38,48,18,30,40,52,18,29,14,31,38,48,14,10,27,33,10,22,6,8,76,14,7,56,55,8,32,62,43,35,53,20,10,40,77,72,6,51,74,42,22,10,29,36,66,75,31,12,28,31,21,21,11,49,43,77,34,47,56,66,37,65,18,23,57,18,14,59,52,14,82,26,46,39,51,72,22,27,40,22,18,23,40,60,55,18,14,22,11,29,34,53,48,14,34,11,36,43,81,88,77,26,46,86,87,80,27,36,18,47,73,73,72,74,68,18,14,30,79,57,18,48,14,45,26,14,11,38,62,49,74,14,59,59,44,56,49,54,36,70,58,48,22,18,16,11,28,51,51,38,35,37,35,12,35,46,74,41,10,15,39,10,19,6,28,35,26,21,23,36,56,48,6,40,16,23,122,23,144,35,289,37,24,38,33,28,32,36,24,16,10,26,24,28,32,17,28,18,29,25,38,40,36,30,20,20,11,41,35,24,39,73,39,10,15,48,44,46,82,30,47,31,53,18,76,14,80,77,50,45,28,42,41,38,48,18,28,52,26,14,78,34,73,67,53,26,62,41,49,14,75,10,6,8,75,20,7,63,8,30,154,43,35,48,61,24,48,40,28,42,68,33,47,40,22,46,53,59,18,23,34,38,68,53,22,80,18,14,19,28,40,81,82,83,85,54,32,55,18,41,38,48,18,30,14,10,27,33,10,6,21,27,27,6,25,42,45,16,70,51,30,30,24,36,40,48,14,19,69,14,46,32,10,6,8,39,61,8,16,29,32,47,39,32,40,34,18,23,49,52,54,73,22,74,48,61,26,53,68,26,22,44,54,54,48,56,22,53,56,22,27,54,60,54,60,22,34,44,18,14,10,63,39,22,43,47,14,10,24,6,8,59,8,14,68,44,46,65,14,19,48,40,53,18,45,60,18,14,10,30,39,39,42,32,34,10,27,33,10,24,24,31,34,24,55,39,22,43,47,14,10,6,2,29,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minipass/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,88,52,14,8,22,22,7,36,53,52,4,79,41,4,31,29,30,41,38,37,29,4,68,4,33,29,42,36,70,57,33,4,68,4,33,29,42,37,33,33,27,47,42,44,46,33,29,31,41,37,35,35,33,33,33,31,45,41,43,41,43,39,43,31,37,35,37,31,31,35,33,47,39,50,30,80,61,12,33,25,48,28,79,4,63,3,13,4,13,9,10,10,13,35,24,26,26,44,45,6,15,57,6,35,26,25,25,12,23,27,29,6,2,4,68,23,3,13,4,37,15,60,24,6,35,32,57,43,6,2,51,91,4,35,3,59,3,76,56,3,68,42,4,47,23,22,18,19,18,16,13,15,19,27,28,22,28,24,25,14,23,25,25,8,41,8,21,8,38,8,21,8,70,71,52,64,8,27,36,17,17,74,85,10,44,37,35,10,47,47,38,10,15,38,35,10,39,39,65,20,64,61,80,10,64,60,78,10,36,22,35,34,31,14,19,71,14,10,6,8,67,7,63,78,56,74,16,8,25,35,6,8,56,8,21,31,6,8,50,8,25,71,6,8,68,8,24,71,6,8,44,8,23,33,6,8,50,8,26,73,6,8,39,8,22,28,6,8,46,7,79,75,35,8,23,42,6,58,16,30,50,44,6,8,44,8,20,30,6,8,79,35,8,23,33,27,26,23,48,31,142,25,10,46,27,31,10,23,31,50,68,72,43,64,60,44,59,87,14,49,59,44,14,50,89,14,10,59,63,32,33,34,59,35,33,31,42,17,41,42,39,20,24,34,10,57,56,29,42,39,20,24,34,10,71,62,41,65,74,53,50,10,56,53,48,10,74,55,31,27,38,13,37,38,35,16,20,30,6,8,39,7,75,18,7,71,78,67,7,73,32,8,14,29,25,33,40,23,45,36,25,10,30,22,60,80,41,29,32,44,72,15,10,60,32,20,6,23,30,33,15,29,46,37,46,46,39,41,14,19,49,42,41,14,10,34,48,32,22,6,31,43,24,31,10,46,27,31,10,33,41,16,34,26,31,67,38,66,64,44,36,21,6,52,17,29,20,59,36,10,30,30,29,33,27,28,36,13,32,6,8,62,7,80,78,79,77,42,8,15,31,6,8,24,8,14,31,29,33,6,8,54,8,22,32,6,8,72,47,8,20,30,6,8,57,8,19,29,6,26,30,37,13,48,34,6,22,30,37,13,58,37,6,31,63,34,60,32,6,26,34,30,6,8,75,7,34,8,23,29,25,33,41,27,58,30,13,43,47,51,21,26,28,10,15,79,77,47,45,58,29,45,17,32,10,21,6,8,48,7,75,74,74,53,8,19,58,17,44,66,43,18,34,14,17,63,24,10,6,8,37,8,31,37,6,8,65,72,7,69,7,81,58,7,76,79,27,7,78,80,17,8,22,43,29,37,35,57,32,14,10,66,36,10,54,28,41,10,58,31,29,64,17,51,10,20,6,8,38,8,34,38,6,8,46,7,74,77,74,53,8,23,44,74,75,65,29,65,45,36,39,39,14,10,20,6,8,61,7,81,77,80,15,8,29,50,49,37,59,39,14,10,20,6,8,48,8,23,34,6,25,35,34,32,41,25,39,30,36,33,30,36,40,10,6,8,67,72,7,74,73,19,7,75,75,76,72,20,7,73,64,7,80,75,72,7,75,67,8,24,30,75,30,30,32,31,26,10,34,46,24,30,64,44,10,33,36,10,35,33,58,56,30,45,46,24,10,35,40,37,72,44,25,36,24,10,36,46,36,24,10,58,40,41,24,10,36,45,32,20,6,23,39,46,30,10,72,32,20,6,18,31,26,34,31,27,52,32,6,19,29,46,24,47,40,18,38,46,14,10,39,21,10,39,40,20,6,8,75,24,8,22,40,27,12,31,32,61,40,34,31,25,35,44,12,17,20,6,8,79,29,7,42,8,21,32,60,10,42,31,27,51,6,8,65,8,22,50,77,48,45,12,6,8,46,7,75,8,31,71,23,33,29,35,26,28,53,11,29,25,31,37,30,69,27,31,25,24,36,42,40,48,24,28,15,40,42,40,48,30,55,15,34,42,42,48,24,59,15,74,47,30,31,49,43,41,43,16,11,17,18,25,26,39,29,15,11,6,8,39,7,76,45,8,26,71,23,33,29,29,26,35,39,35,28,53,11,29,25,31,39,69,11,32,32,36,17,18,25,26,34,29,15,11,6,8,80,7,71,20,7,77,31,7,71,22,8,18,31,20,40,17,38,25,10,32,32,63,33,32,25,61,24,16,36,62,13,34,21,6,8,34,7,71,7,19,8,28,33,6,2,29,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js":{"lineLengths":[14,74,63,26,42,46,43,4,68,11,4,16,18,15,12,12,15,11,17,14,12,17,28,58,43,55,10,37,52,10,54,82,10,42,49,55,10,41,35,29,35,76,33,29,30,36,49,50,56,36,26,32,46,70,67,39,33,35,35,18,58,58,51,48,56,14,60,58,55,39,33,35,35,18,36,36,51,48,56,14,10,6,8,54,8,16,47,6,8,45,8,17,67,6,8,45,8,19,72,6,8,42,8,17,65,6,8,64,8,19,35,32,35,40,80,51,69,6,8,59,8,16,46,6,8,75,8,13,38,31,29,40,102,51,41,45,27,6,8,63,8,14,38,41,26,29,46,41,36,36,49,31,49,30,6,27,27,72,75,50,8,65,8,16,38,43,28,31,46,41,39,49,46,6,43,55,57,8,57,8,19,38,46,31,34,51,38,35,6,8,54,8,13,40,79,16,18,6,8,73,24,8,28,38,34,36,6,8,75,8,27,78,26,38,21,6,2,27,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/walker.js":{"lineLengths":[14,63,69,4,75,12,3,11,4,40,44,50,64,45,28,47,18,4,62,4,17,10,14,10,22,20,21,20,13,10,12,14,40,34,26,26,75,27,58,10,70,28,30,51,29,27,39,58,43,16,10,6,21,71,6,29,56,6,30,14,28,6,15,30,34,20,29,29,28,64,18,10,6,19,34,20,30,28,18,10,15,33,37,10,6,68,45,33,38,30,17,34,62,22,34,21,10,58,50,74,47,34,68,38,14,33,10,46,6,31,20,74,42,54,33,37,39,55,30,16,25,6,31,38,30,17,34,58,22,34,21,10,58,48,74,45,69,36,14,10,46,6,31,30,20,86,26,73,37,39,31,10,24,76,40,10,15,76,83,34,22,66,10,6,38,51,15,43,6,36,49,15,43,6,35,30,34,18,29,85,6,47,43,25,34,18,27,80,20,10,53,78,69,66,23,29,31,22,11,74,34,26,21,63,10,54,76,26,14,21,54,35,66,19,94,14,10,16,6,46,62,23,29,31,22,11,74,34,26,21,63,10,73,21,69,10,16,6,39,30,34,18,29,89,6,51,43,25,34,18,27,84,20,10,53,78,69,66,23,29,31,22,11,74,34,26,48,10,54,76,26,14,21,46,60,10,16,6,50,62,23,29,31,22,11,74,34,26,48,10,73,21,73,10,16,6,2,29,36,13,40,37,34,6,19,29,6,19,34,38,37,37,10,42,58,44,45,18,23,39,18,16,12,29,6,17,34,38,37,35,10,69,58,38,42,12,29,6,2,33,36,13,40,37,49,33,30,12,55,56,6,19,31,35,26,6,15,34,34,40,78,16,10,15,74,10,29,6,19,37,35,10,77,29,6,2,33,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      (!this.opts.nodir ||\n        !this.opts.follow ||\n        !e.isSymbolicLink() ||\n        !e.realpathCached()?.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js":{"lineLengths":[14,55,35,67,46,63,25,42,46,55,15,41,23,15,4,42,4,15,14,22,14,22,96,28,28,36,36,25,23,21,20,19,24,34,22,29,28,11,76,73,76,48,76,78,32,80,77,30,79,49,37,63,54,42,51,38,45,63,18,49,66,68,36,39,18,37,84,77,75,49,30,43,21,43,32,34,55,25,55,18,14,10,6,17,39,42,46,42,41,57,29,10,41,57,29,10,22,6,25,45,54,49,35,29,10,49,35,29,10,22,6,2,25,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        /* c8 ignore start */\n        if (!parsed || !globParts) {\n          throw new Error('invalid pattern object')\n        }\n        // strip off leading ./ portions\n        // https://github.com/isaacs/node-glob/issues/570\n        while (parsed[0] === '.' && globParts[0] === '.') {\n          parsed.shift()\n          globParts.shift()\n        }\n        /* c8 ignore stop */\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/processor.js":{"lineLengths":[14,70,63,94,42,4,66,4,23,11,37,28,6,13,56,6,33,77,6,35,44,49,20,46,13,71,6,2,41,4,67,73,67,4,20,23,35,56,48,73,6,30,16,62,18,23,23,12,6,2,35,4,72,21,4,17,23,27,36,20,10,45,20,76,36,14,10,13,47,6,18,45,30,21,64,10,29,21,6,16,61,6,13,67,6,2,29,4,55,3,67,36,4,18,20,33,31,14,12,9,10,40,26,37,31,45,36,36,6,40,34,62,73,48,50,57,41,83,47,24,75,37,29,45,29,54,30,18,23,36,18,14,30,26,19,22,33,66,43,40,23,32,32,14,35,35,27,63,30,61,14,68,50,63,41,68,44,67,65,26,14,51,57,61,73,77,81,43,35,53,51,18,44,44,70,70,66,76,18,23,39,81,81,46,50,45,36,66,78,58,26,22,18,14,44,47,14,10,21,6,23,37,6,14,62,6,63,46,50,32,37,52,66,38,35,46,55,45,45,50,70,18,48,62,18,23,62,18,14,10,24,6,47,51,38,54,14,34,76,81,80,82,72,58,51,18,47,65,52,22,61,55,22,18,14,10,63,21,20,39,42,55,31,29,30,63,14,36,38,42,37,45,14,45,63,14,10,6,39,29,20,21,50,10,15,40,10,6,39,32,27,20,21,50,10,15,40,10,6,2,31,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js":{"lineLengths":[14,63,27,42,4,75,31,3,79,78,75,79,79,78,4,46,35,29,6,31,62,25,6,18,3,29,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;KACpB;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;QACvB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;KACtD;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null}}}